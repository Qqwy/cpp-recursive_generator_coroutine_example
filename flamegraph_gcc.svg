<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="582" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="565.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="565.00"> </text><svg id="frames" x="10" width="1180"><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (16 samples, 0.11%)</title><rect x="0.0567%" y="485" width="0.1134%" height="15" fill="rgb(227,0,7)"/><text x="0.3067%" y="495.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (16 samples, 0.11%)</title><rect x="0.1701%" y="485" width="0.1134%" height="15" fill="rgb(217,0,24)"/><text x="0.4201%" y="495.50"></text></g><g><title>__GI__IO_fwrite (16 samples, 0.11%)</title><rect x="0.3048%" y="485" width="0.1134%" height="15" fill="rgb(221,193,54)"/><text x="0.5548%" y="495.50"></text></g><g><title>__GI___getdents64 (15 samples, 0.11%)</title><rect x="0.4182%" y="485" width="0.1063%" height="15" fill="rgb(248,212,6)"/><text x="0.6682%" y="495.50"></text></g><g><title>__GI___libc_free (42 samples, 0.30%)</title><rect x="0.5245%" y="485" width="0.2977%" height="15" fill="rgb(208,68,35)"/><text x="0.7745%" y="495.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.11%)</title><rect x="0.8222%" y="485" width="0.1063%" height="15" fill="rgb(232,128,0)"/><text x="1.0722%" y="495.50"></text></g><g><title>_int_free (19 samples, 0.13%)</title><rect x="0.9782%" y="485" width="0.1347%" height="15" fill="rgb(207,160,47)"/><text x="1.2282%" y="495.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (64 samples, 0.45%)</title><rect x="1.1625%" y="485" width="0.4536%" height="15" fill="rgb(228,23,34)"/><text x="1.4125%" y="495.50"></text></g><g><title>operator new (16 samples, 0.11%)</title><rect x="1.6161%" y="485" width="0.1134%" height="15" fill="rgb(218,30,26)"/><text x="1.8661%" y="495.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (33 samples, 0.23%)</title><rect x="1.7295%" y="485" width="0.2339%" height="15" fill="rgb(220,122,19)"/><text x="1.9795%" y="495.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (35 samples, 0.25%)</title><rect x="1.9634%" y="485" width="0.2481%" height="15" fill="rgb(250,228,42)"/><text x="2.2134%" y="495.50"></text></g><g><title>[[heap]] (324 samples, 2.30%)</title><rect x="0.0000%" y="501" width="2.2966%" height="15" fill="rgb(240,193,28)"/><text x="0.2500%" y="511.50">[..</text></g><g><title>__GI__IO_fwrite (70 samples, 0.50%)</title><rect x="2.2966%" y="485" width="0.4962%" height="15" fill="rgb(216,20,37)"/><text x="2.5466%" y="495.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (25 samples, 0.18%)</title><rect x="2.9770%" y="485" width="0.1772%" height="15" fill="rgb(206,188,39)"/><text x="3.2270%" y="495.50"></text></g><g><title>operator new (17 samples, 0.12%)</title><rect x="3.1542%" y="485" width="0.1205%" height="15" fill="rgb(217,207,13)"/><text x="3.4042%" y="495.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (18 samples, 0.13%)</title><rect x="3.2747%" y="485" width="0.1276%" height="15" fill="rgb(231,73,38)"/><text x="3.5247%" y="495.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (26 samples, 0.18%)</title><rect x="3.4023%" y="485" width="0.1843%" height="15" fill="rgb(225,20,46)"/><text x="3.6523%" y="495.50"></text></g><g><title>[[stack]] (189 samples, 1.34%)</title><rect x="2.2966%" y="501" width="1.3397%" height="15" fill="rgb(210,31,41)"/><text x="2.5466%" y="511.50"></text></g><g><title>[libc-2.33.so] (53 samples, 0.38%)</title><rect x="3.6362%" y="501" width="0.3757%" height="15" fill="rgb(221,200,47)"/><text x="3.8862%" y="511.50"></text></g><g><title>_IO_new_file_xsputn (53 samples, 0.38%)</title><rect x="3.6362%" y="485" width="0.3757%" height="15" fill="rgb(226,26,5)"/><text x="3.8862%" y="495.50"></text></g><g><title>_IO_new_file_xsputn (22 samples, 0.16%)</title><rect x="4.0970%" y="485" width="0.1559%" height="15" fill="rgb(249,33,26)"/><text x="4.3470%" y="495.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (15 samples, 0.11%)</title><rect x="4.2529%" y="485" width="0.1063%" height="15" fill="rgb(235,183,28)"/><text x="4.5029%" y="495.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (29 samples, 0.21%)</title><rect x="4.3592%" y="485" width="0.2056%" height="15" fill="rgb(221,5,38)"/><text x="4.6092%" y="495.50"></text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (73 samples, 0.52%)</title><rect x="4.5648%" y="485" width="0.5174%" height="15" fill="rgb(247,18,42)"/><text x="4.8148%" y="495.50"></text></g><g><title>__GI___libc_free (29 samples, 0.21%)</title><rect x="5.1602%" y="485" width="0.2056%" height="15" fill="rgb(241,131,45)"/><text x="5.4102%" y="495.50"></text></g><g><title>__GI___libc_malloc (42 samples, 0.30%)</title><rect x="5.3657%" y="485" width="0.2977%" height="15" fill="rgb(249,31,29)"/><text x="5.6157%" y="495.50"></text></g><g><title>__readdir64 (43 samples, 0.30%)</title><rect x="5.9186%" y="485" width="0.3048%" height="15" fill="rgb(225,111,53)"/><text x="6.1686%" y="495.50"></text></g><g><title>_int_free (66 samples, 0.47%)</title><rect x="6.2730%" y="485" width="0.4678%" height="15" fill="rgb(238,160,17)"/><text x="6.5230%" y="495.50"></text></g><g><title>_int_malloc (24 samples, 0.17%)</title><rect x="6.7409%" y="485" width="0.1701%" height="15" fill="rgb(214,148,48)"/><text x="6.9909%" y="495.50"></text></g><g><title>is_special (42 samples, 0.30%)</title><rect x="6.9322%" y="485" width="0.2977%" height="15" fill="rgb(232,36,49)"/><text x="7.1822%" y="495.50"></text></g><g><title>operator new (34 samples, 0.24%)</title><rect x="7.2654%" y="485" width="0.2410%" height="15" fill="rgb(209,103,24)"/><text x="7.5154%" y="495.50"></text></g><g><title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (157 samples, 1.11%)</title><rect x="7.6056%" y="485" width="1.1128%" height="15" fill="rgb(229,88,8)"/><text x="7.8556%" y="495.50"></text></g><g><title>std::__ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (80 samples, 0.57%)</title><rect x="8.1514%" y="469" width="0.5671%" height="15" fill="rgb(213,181,19)"/><text x="8.4014%" y="479.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::sputn (80 samples, 0.57%)</title><rect x="8.1514%" y="453" width="0.5671%" height="15" fill="rgb(254,191,54)"/><text x="8.4014%" y="463.50"></text></g><g><title>[unknown] (670 samples, 4.75%)</title><rect x="4.0828%" y="501" width="4.7491%" height="15" fill="rgb(241,83,37)"/><text x="4.3328%" y="511.50">[unkno..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::is_resumable (35 samples, 0.25%)</title><rect x="8.9878%" y="437" width="0.2481%" height="15" fill="rgb(233,36,39)"/><text x="9.2378%" y="447.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (19 samples, 0.13%)</title><rect x="9.3280%" y="421" width="0.1347%" height="15" fill="rgb(226,3,54)"/><text x="9.5780%" y="431.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::is_resumable (56 samples, 0.40%)</title><rect x="9.5336%" y="421" width="0.3969%" height="15" fill="rgb(245,192,40)"/><text x="9.7836%" y="431.50"></text></g><g><title>directory_entries_with_paths (24 samples, 0.17%)</title><rect x="10.1219%" y="373" width="0.1701%" height="15" fill="rgb(238,167,29)"/><text x="10.3719%" y="383.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (36 samples, 0.26%)</title><rect x="10.0439%" y="389" width="0.2552%" height="15" fill="rgb(232,182,51)"/><text x="10.2939%" y="399.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::begin (27 samples, 0.19%)</title><rect x="10.3487%" y="341" width="0.1914%" height="15" fill="rgb(231,60,39)"/><text x="10.5987%" y="351.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::iterator (27 samples, 0.19%)</title><rect x="10.3487%" y="325" width="0.1914%" height="15" fill="rgb(208,69,12)"/><text x="10.5987%" y="335.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (27 samples, 0.19%)</title><rect x="10.3487%" y="309" width="0.1914%" height="15" fill="rgb(235,93,37)"/><text x="10.5987%" y="319.50"></text></g><g><title>directory_entries_with_paths (23 samples, 0.16%)</title><rect x="10.3771%" y="293" width="0.1630%" height="15" fill="rgb(213,116,39)"/><text x="10.6271%" y="303.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (35 samples, 0.25%)</title><rect x="10.2991%" y="373" width="0.2481%" height="15" fill="rgb(222,207,29)"/><text x="10.5491%" y="383.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (35 samples, 0.25%)</title><rect x="10.2991%" y="357" width="0.2481%" height="15" fill="rgb(206,96,30)"/><text x="10.5491%" y="367.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (39 samples, 0.28%)</title><rect x="10.2991%" y="389" width="0.2764%" height="15" fill="rgb(218,138,4)"/><text x="10.5491%" y="399.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (81 samples, 0.57%)</title><rect x="10.0085%" y="405" width="0.5741%" height="15" fill="rgb(250,191,14)"/><text x="10.2585%" y="415.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::is_resumable (74 samples, 0.52%)</title><rect x="10.6039%" y="405" width="0.5245%" height="15" fill="rgb(239,60,40)"/><text x="10.8539%" y="415.50"></text></g><g><title>std::__n4861::coroutine_handle&lt;generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type&gt;::operator bool (28 samples, 0.20%)</title><rect x="10.9300%" y="389" width="0.1985%" height="15" fill="rgb(206,27,48)"/><text x="11.1800%" y="399.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (26 samples, 0.18%)</title><rect x="12.0357%" y="341" width="0.1843%" height="15" fill="rgb(225,35,8)"/><text x="12.2857%" y="351.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (26 samples, 0.18%)</title><rect x="12.0357%" y="325" width="0.1843%" height="15" fill="rgb(250,213,24)"/><text x="12.2857%" y="335.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (30 samples, 0.21%)</title><rect x="12.2200%" y="325" width="0.2126%" height="15" fill="rgb(247,123,22)"/><text x="12.4700%" y="335.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (32 samples, 0.23%)</title><rect x="12.2200%" y="341" width="0.2268%" height="15" fill="rgb(231,138,38)"/><text x="12.4700%" y="351.50"></text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (117 samples, 0.83%)</title><rect x="11.7097%" y="357" width="0.8293%" height="15" fill="rgb(231,145,46)"/><text x="11.9597%" y="367.50"></text></g><g><title>generator&lt;dirent&gt;::promise_type::yield_value (20 samples, 0.14%)</title><rect x="13.0210%" y="309" width="0.1418%" height="15" fill="rgb(251,118,11)"/><text x="13.2710%" y="319.50"></text></g><g><title>std::optional&lt;dirent&gt;::operator=&lt;dirent&gt; (20 samples, 0.14%)</title><rect x="13.0210%" y="293" width="0.1418%" height="15" fill="rgb(217,147,25)"/><text x="13.2710%" y="303.50"></text></g><g><title>is_special (36 samples, 0.26%)</title><rect x="13.1627%" y="309" width="0.2552%" height="15" fill="rgb(247,81,37)"/><text x="13.4127%" y="319.50"></text></g><g><title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (25 samples, 0.18%)</title><rect x="13.2407%" y="293" width="0.1772%" height="15" fill="rgb(209,12,38)"/><text x="13.4907%" y="303.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (24 samples, 0.17%)</title><rect x="13.2478%" y="277" width="0.1701%" height="15" fill="rgb(227,1,9)"/><text x="13.4978%" y="287.50"></text></g><g><title>std::char_traits&lt;char&gt;::length (18 samples, 0.13%)</title><rect x="13.2903%" y="261" width="0.1276%" height="15" fill="rgb(248,47,43)"/><text x="13.5403%" y="271.50"></text></g><g><title>__strlen_avx2 (15 samples, 0.11%)</title><rect x="13.3116%" y="245" width="0.1063%" height="15" fill="rgb(221,10,30)"/><text x="13.5616%" y="255.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (126 samples, 0.89%)</title><rect x="12.5390%" y="325" width="0.8931%" height="15" fill="rgb(210,229,1)"/><text x="12.7890%" y="335.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (132 samples, 0.94%)</title><rect x="12.5390%" y="341" width="0.9356%" height="15" fill="rgb(222,148,37)"/><text x="12.7890%" y="351.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (15 samples, 0.11%)</title><rect x="13.6589%" y="341" width="0.1063%" height="15" fill="rgb(234,67,33)"/><text x="13.9089%" y="351.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (15 samples, 0.11%)</title><rect x="13.6589%" y="325" width="0.1063%" height="15" fill="rgb(247,98,35)"/><text x="13.9089%" y="335.50"></text></g><g><title>directory_entries_with_paths (196 samples, 1.39%)</title><rect x="12.5390%" y="357" width="1.3893%" height="15" fill="rgb(247,138,52)"/><text x="12.7890%" y="367.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (317 samples, 2.25%)</title><rect x="11.7097%" y="373" width="2.2470%" height="15" fill="rgb(213,79,30)"/><text x="11.9597%" y="383.50">g..</text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (15 samples, 0.11%)</title><rect x="14.0488%" y="277" width="0.1063%" height="15" fill="rgb(246,177,23)"/><text x="14.2988%" y="287.50"></text></g><g><title>generator&lt;dirent&gt;::begin (40 samples, 0.28%)</title><rect x="14.1622%" y="261" width="0.2835%" height="15" fill="rgb(230,62,27)"/><text x="14.4122%" y="271.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::iterator (40 samples, 0.28%)</title><rect x="14.1622%" y="245" width="0.2835%" height="15" fill="rgb(216,154,8)"/><text x="14.4122%" y="255.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (40 samples, 0.28%)</title><rect x="14.1622%" y="229" width="0.2835%" height="15" fill="rgb(244,35,45)"/><text x="14.4122%" y="239.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (40 samples, 0.28%)</title><rect x="14.1622%" y="213" width="0.2835%" height="15" fill="rgb(251,115,12)"/><text x="14.4122%" y="223.50"></text></g><g><title>opendir_tail (18 samples, 0.13%)</title><rect x="14.3181%" y="197" width="0.1276%" height="15" fill="rgb(240,54,50)"/><text x="14.5681%" y="207.50"></text></g><g><title>directory_entries_with_paths (55 samples, 0.39%)</title><rect x="14.1551%" y="277" width="0.3898%" height="15" fill="rgb(233,84,52)"/><text x="14.4051%" y="287.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::begin (71 samples, 0.50%)</title><rect x="14.0488%" y="325" width="0.5033%" height="15" fill="rgb(207,117,47)"/><text x="14.2988%" y="335.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::iterator (71 samples, 0.50%)</title><rect x="14.0488%" y="309" width="0.5033%" height="15" fill="rgb(249,43,39)"/><text x="14.2988%" y="319.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (71 samples, 0.50%)</title><rect x="14.0488%" y="293" width="0.5033%" height="15" fill="rgb(209,38,44)"/><text x="14.2988%" y="303.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (84 samples, 0.60%)</title><rect x="13.9708%" y="357" width="0.5954%" height="15" fill="rgb(236,212,23)"/><text x="14.2208%" y="367.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (84 samples, 0.60%)</title><rect x="13.9708%" y="341" width="0.5954%" height="15" fill="rgb(242,79,21)"/><text x="14.2208%" y="351.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (110 samples, 0.78%)</title><rect x="13.9566%" y="373" width="0.7797%" height="15" fill="rgb(211,96,35)"/><text x="14.2066%" y="383.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (24 samples, 0.17%)</title><rect x="14.5662%" y="357" width="0.1701%" height="15" fill="rgb(253,215,40)"/><text x="14.8162%" y="367.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (24 samples, 0.17%)</title><rect x="14.5662%" y="341" width="0.1701%" height="15" fill="rgb(211,81,21)"/><text x="14.8162%" y="351.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (24 samples, 0.17%)</title><rect x="14.5662%" y="325" width="0.1701%" height="15" fill="rgb(208,190,38)"/><text x="14.8162%" y="335.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (508 samples, 3.60%)</title><rect x="11.1993%" y="389" width="3.6008%" height="15" fill="rgb(235,213,38)"/><text x="11.4493%" y="399.50">_Z27..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::is_resumable (70 samples, 0.50%)</title><rect x="14.8639%" y="389" width="0.4962%" height="15" fill="rgb(237,122,38)"/><text x="15.1139%" y="399.50"></text></g><g><title>std::__n4861::coroutine_handle&lt;generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type&gt;::operator bool (15 samples, 0.11%)</title><rect x="15.2538%" y="373" width="0.1063%" height="15" fill="rgb(244,218,35)"/><text x="15.5038%" y="383.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (21 samples, 0.15%)</title><rect x="16.2886%" y="325" width="0.1489%" height="15" fill="rgb(240,68,47)"/><text x="16.5386%" y="335.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (21 samples, 0.15%)</title><rect x="16.2886%" y="309" width="0.1489%" height="15" fill="rgb(210,16,53)"/><text x="16.5386%" y="319.50"></text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (94 samples, 0.67%)</title><rect x="16.0405%" y="341" width="0.6663%" height="15" fill="rgb(235,124,12)"/><text x="16.2905%" y="351.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (21 samples, 0.15%)</title><rect x="16.5580%" y="325" width="0.1489%" height="15" fill="rgb(224,169,11)"/><text x="16.8080%" y="335.50"></text></g><g><title>__readdir64 (18 samples, 0.13%)</title><rect x="17.0542%" y="293" width="0.1276%" height="15" fill="rgb(250,166,2)"/><text x="17.3042%" y="303.50"></text></g><g><title>generator&lt;dirent&gt;::promise_type::yield_value (19 samples, 0.13%)</title><rect x="17.1817%" y="293" width="0.1347%" height="15" fill="rgb(242,216,29)"/><text x="17.4317%" y="303.50"></text></g><g><title>std::optional&lt;dirent&gt;::operator=&lt;dirent&gt; (19 samples, 0.13%)</title><rect x="17.1817%" y="277" width="0.1347%" height="15" fill="rgb(230,116,27)"/><text x="17.4317%" y="287.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (126 samples, 0.89%)</title><rect x="16.7068%" y="309" width="0.8931%" height="15" fill="rgb(228,99,48)"/><text x="16.9568%" y="319.50"></text></g><g><title>is_special (40 samples, 0.28%)</title><rect x="17.3164%" y="293" width="0.2835%" height="15" fill="rgb(253,11,6)"/><text x="17.5664%" y="303.50"></text></g><g><title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (26 samples, 0.18%)</title><rect x="17.4157%" y="277" width="0.1843%" height="15" fill="rgb(247,143,39)"/><text x="17.6657%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (25 samples, 0.18%)</title><rect x="17.4227%" y="261" width="0.1772%" height="15" fill="rgb(236,97,10)"/><text x="17.6727%" y="271.50"></text></g><g><title>std::char_traits&lt;char&gt;::length (15 samples, 0.11%)</title><rect x="17.4936%" y="245" width="0.1063%" height="15" fill="rgb(233,208,19)"/><text x="17.7436%" y="255.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (132 samples, 0.94%)</title><rect x="16.7068%" y="325" width="0.9356%" height="15" fill="rgb(216,164,2)"/><text x="16.9568%" y="335.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (15 samples, 0.11%)</title><rect x="17.9614%" y="261" width="0.1063%" height="15" fill="rgb(220,129,5)"/><text x="18.2114%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (15 samples, 0.11%)</title><rect x="17.9614%" y="245" width="0.1063%" height="15" fill="rgb(242,17,10)"/><text x="18.2114%" y="255.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (15 samples, 0.11%)</title><rect x="17.9614%" y="229" width="0.1063%" height="15" fill="rgb(242,107,0)"/><text x="18.2114%" y="239.50"></text></g><g><title>std::allocator&lt;char&gt;::deallocate (15 samples, 0.11%)</title><rect x="17.9614%" y="213" width="0.1063%" height="15" fill="rgb(251,28,31)"/><text x="18.2114%" y="223.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (15 samples, 0.11%)</title><rect x="17.9614%" y="197" width="0.1063%" height="15" fill="rgb(233,223,10)"/><text x="18.2114%" y="207.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (35 samples, 0.25%)</title><rect x="17.8551%" y="325" width="0.2481%" height="15" fill="rgb(215,21,27)"/><text x="18.1051%" y="335.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (35 samples, 0.25%)</title><rect x="17.8551%" y="309" width="0.2481%" height="15" fill="rgb(232,23,21)"/><text x="18.1051%" y="319.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (30 samples, 0.21%)</title><rect x="17.8906%" y="293" width="0.2126%" height="15" fill="rgb(244,5,23)"/><text x="18.1406%" y="303.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (30 samples, 0.21%)</title><rect x="17.8906%" y="277" width="0.2126%" height="15" fill="rgb(226,81,46)"/><text x="18.1406%" y="287.50"></text></g><g><title>directory_entries_with_paths (222 samples, 1.57%)</title><rect x="16.7068%" y="341" width="1.5736%" height="15" fill="rgb(247,70,30)"/><text x="16.9568%" y="351.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (19 samples, 0.13%)</title><rect x="18.1457%" y="325" width="0.1347%" height="15" fill="rgb(212,68,19)"/><text x="18.3957%" y="335.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (319 samples, 2.26%)</title><rect x="16.0405%" y="357" width="2.2611%" height="15" fill="rgb(240,187,13)"/><text x="16.2905%" y="367.50">g..</text></g><g><title>directory_entries_with_paths (16 samples, 0.11%)</title><rect x="18.4505%" y="309" width="0.1134%" height="15" fill="rgb(223,113,26)"/><text x="18.7005%" y="319.50"></text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (47 samples, 0.33%)</title><rect x="18.5639%" y="261" width="0.3331%" height="15" fill="rgb(206,192,2)"/><text x="18.8139%" y="271.50"></text></g><g><title>__readdir64 (15 samples, 0.11%)</title><rect x="19.1735%" y="181" width="0.1063%" height="15" fill="rgb(241,108,4)"/><text x="19.4235%" y="191.50"></text></g><g><title>is_special (21 samples, 0.15%)</title><rect x="19.3011%" y="181" width="0.1489%" height="15" fill="rgb(247,173,49)"/><text x="19.5511%" y="191.50"></text></g><g><title>__alloc_dir (29 samples, 0.21%)</title><rect x="19.4641%" y="165" width="0.2056%" height="15" fill="rgb(224,114,35)"/><text x="19.7141%" y="175.50"></text></g><g><title>__GI___libc_malloc (27 samples, 0.19%)</title><rect x="19.4783%" y="149" width="0.1914%" height="15" fill="rgb(245,159,27)"/><text x="19.7283%" y="159.50"></text></g><g><title>_int_malloc (24 samples, 0.17%)</title><rect x="19.4996%" y="133" width="0.1701%" height="15" fill="rgb(245,172,44)"/><text x="19.7496%" y="143.50"></text></g><g><title>generator&lt;dirent&gt;::begin (119 samples, 0.84%)</title><rect x="18.9396%" y="245" width="0.8435%" height="15" fill="rgb(236,23,11)"/><text x="19.1896%" y="255.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::iterator (119 samples, 0.84%)</title><rect x="18.9396%" y="229" width="0.8435%" height="15" fill="rgb(205,117,38)"/><text x="19.1896%" y="239.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (119 samples, 0.84%)</title><rect x="18.9396%" y="213" width="0.8435%" height="15" fill="rgb(237,72,25)"/><text x="19.1896%" y="223.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (119 samples, 0.84%)</title><rect x="18.9396%" y="197" width="0.8435%" height="15" fill="rgb(244,70,9)"/><text x="19.1896%" y="207.50"></text></g><g><title>opendir_tail (47 samples, 0.33%)</title><rect x="19.4500%" y="181" width="0.3331%" height="15" fill="rgb(217,125,39)"/><text x="19.7000%" y="191.50"></text></g><g><title>__fstatat64 (16 samples, 0.11%)</title><rect x="19.6697%" y="165" width="0.1134%" height="15" fill="rgb(235,36,10)"/><text x="19.9197%" y="175.50"></text></g><g><title>directory_entries_with_paths (154 samples, 1.09%)</title><rect x="18.8971%" y="261" width="1.0916%" height="15" fill="rgb(251,123,47)"/><text x="19.1471%" y="271.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::begin (203 samples, 1.44%)</title><rect x="18.5639%" y="309" width="1.4389%" height="15" fill="rgb(221,13,13)"/><text x="18.8139%" y="319.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::iterator (203 samples, 1.44%)</title><rect x="18.5639%" y="293" width="1.4389%" height="15" fill="rgb(238,131,9)"/><text x="18.8139%" y="303.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (203 samples, 1.44%)</title><rect x="18.5639%" y="277" width="1.4389%" height="15" fill="rgb(211,50,8)"/><text x="18.8139%" y="287.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (243 samples, 1.72%)</title><rect x="18.3300%" y="341" width="1.7224%" height="15" fill="rgb(245,182,24)"/><text x="18.5800%" y="351.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (243 samples, 1.72%)</title><rect x="18.3300%" y="325" width="1.7224%" height="15" fill="rgb(242,14,37)"/><text x="18.5800%" y="335.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (284 samples, 2.01%)</title><rect x="18.3017%" y="357" width="2.0130%" height="15" fill="rgb(246,228,12)"/><text x="18.5517%" y="367.50">g..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (35 samples, 0.25%)</title><rect x="20.0666%" y="341" width="0.2481%" height="15" fill="rgb(213,55,15)"/><text x="20.3166%" y="351.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (34 samples, 0.24%)</title><rect x="20.0737%" y="325" width="0.2410%" height="15" fill="rgb(209,9,3)"/><text x="20.3237%" y="335.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (34 samples, 0.24%)</title><rect x="20.0737%" y="309" width="0.2410%" height="15" fill="rgb(230,59,30)"/><text x="20.3237%" y="319.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (714 samples, 5.06%)</title><rect x="15.4451%" y="373" width="5.0610%" height="15" fill="rgb(209,121,21)"/><text x="15.6951%" y="383.50">_Z27re..</text></g><g><title>recursive_directory_entries (25 samples, 0.18%)</title><rect x="20.3289%" y="357" width="0.1772%" height="15" fill="rgb(220,109,13)"/><text x="20.5789%" y="367.50"></text></g><g><title>operator new (22 samples, 0.16%)</title><rect x="20.3502%" y="341" width="0.1559%" height="15" fill="rgb(232,18,1)"/><text x="20.6002%" y="351.50"></text></g><g><title>__GI___libc_malloc (21 samples, 0.15%)</title><rect x="20.3572%" y="325" width="0.1489%" height="15" fill="rgb(215,41,42)"/><text x="20.6072%" y="335.50"></text></g><g><title>_int_malloc (18 samples, 0.13%)</title><rect x="20.3785%" y="309" width="0.1276%" height="15" fill="rgb(224,123,36)"/><text x="20.6285%" y="319.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::is_resumable (61 samples, 0.43%)</title><rect x="20.5557%" y="373" width="0.4324%" height="15" fill="rgb(240,125,3)"/><text x="20.8057%" y="383.50"></text></g><g><title>__GI___libc_free (16 samples, 0.11%)</title><rect x="22.0513%" y="213" width="0.1134%" height="15" fill="rgb(205,98,50)"/><text x="22.3013%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (18 samples, 0.13%)</title><rect x="22.0513%" y="277" width="0.1276%" height="15" fill="rgb(205,185,37)"/><text x="22.3013%" y="287.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (18 samples, 0.13%)</title><rect x="22.0513%" y="261" width="0.1276%" height="15" fill="rgb(238,207,15)"/><text x="22.3013%" y="271.50"></text></g><g><title>std::allocator&lt;char&gt;::deallocate (18 samples, 0.13%)</title><rect x="22.0513%" y="245" width="0.1276%" height="15" fill="rgb(213,199,42)"/><text x="22.3013%" y="255.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (18 samples, 0.13%)</title><rect x="22.0513%" y="229" width="0.1276%" height="15" fill="rgb(235,201,11)"/><text x="22.3013%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (20 samples, 0.14%)</title><rect x="22.0442%" y="309" width="0.1418%" height="15" fill="rgb(207,46,11)"/><text x="22.2942%" y="319.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (20 samples, 0.14%)</title><rect x="22.0442%" y="293" width="0.1418%" height="15" fill="rgb(241,35,35)"/><text x="22.2942%" y="303.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (28 samples, 0.20%)</title><rect x="22.1860%" y="309" width="0.1985%" height="15" fill="rgb(243,32,47)"/><text x="22.4360%" y="319.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (28 samples, 0.20%)</title><rect x="22.1860%" y="293" width="0.1985%" height="15" fill="rgb(247,202,23)"/><text x="22.4360%" y="303.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (18 samples, 0.13%)</title><rect x="22.3845%" y="309" width="0.1276%" height="15" fill="rgb(219,102,11)"/><text x="22.6345%" y="319.50"></text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (121 samples, 0.86%)</title><rect x="21.7961%" y="325" width="0.8577%" height="15" fill="rgb(243,110,44)"/><text x="22.0461%" y="335.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (20 samples, 0.14%)</title><rect x="22.5120%" y="309" width="0.1418%" height="15" fill="rgb(222,74,54)"/><text x="22.7620%" y="319.50"></text></g><g><title>__closedir (18 samples, 0.13%)</title><rect x="23.1004%" y="277" width="0.1276%" height="15" fill="rgb(216,99,12)"/><text x="23.3504%" y="287.50"></text></g><g><title>__GI___libc_free (15 samples, 0.11%)</title><rect x="23.1216%" y="261" width="0.1063%" height="15" fill="rgb(226,22,26)"/><text x="23.3716%" y="271.50"></text></g><g><title>__readdir64 (23 samples, 0.16%)</title><rect x="23.2280%" y="277" width="0.1630%" height="15" fill="rgb(217,163,10)"/><text x="23.4780%" y="287.50"></text></g><g><title>generator&lt;dirent&gt;::promise_type::yield_value (24 samples, 0.17%)</title><rect x="23.3981%" y="277" width="0.1701%" height="15" fill="rgb(213,25,53)"/><text x="23.6481%" y="287.50"></text></g><g><title>std::optional&lt;dirent&gt;::operator=&lt;dirent&gt; (24 samples, 0.17%)</title><rect x="23.3981%" y="261" width="0.1701%" height="15" fill="rgb(252,105,26)"/><text x="23.6481%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (19 samples, 0.13%)</title><rect x="23.5965%" y="261" width="0.1347%" height="15" fill="rgb(220,39,43)"/><text x="23.8465%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (19 samples, 0.13%)</title><rect x="23.5965%" y="245" width="0.1347%" height="15" fill="rgb(229,68,48)"/><text x="23.8465%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (19 samples, 0.13%)</title><rect x="23.5965%" y="229" width="0.1347%" height="15" fill="rgb(252,8,32)"/><text x="23.8465%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (19 samples, 0.13%)</title><rect x="23.5965%" y="213" width="0.1347%" height="15" fill="rgb(223,20,43)"/><text x="23.8465%" y="223.50"></text></g><g><title>__strlen_avx2 (20 samples, 0.14%)</title><rect x="23.8234%" y="213" width="0.1418%" height="15" fill="rgb(229,81,49)"/><text x="24.0734%" y="223.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (188 samples, 1.33%)</title><rect x="22.6538%" y="293" width="1.3326%" height="15" fill="rgb(236,28,36)"/><text x="22.9038%" y="303.50"></text></g><g><title>is_special (59 samples, 0.42%)</title><rect x="23.5682%" y="277" width="0.4182%" height="15" fill="rgb(249,185,26)"/><text x="23.8182%" y="287.50"></text></g><g><title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (36 samples, 0.26%)</title><rect x="23.7312%" y="261" width="0.2552%" height="15" fill="rgb(249,174,33)"/><text x="23.9812%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (36 samples, 0.26%)</title><rect x="23.7312%" y="245" width="0.2552%" height="15" fill="rgb(233,201,37)"/><text x="23.9812%" y="255.50"></text></g><g><title>std::char_traits&lt;char&gt;::length (26 samples, 0.18%)</title><rect x="23.8021%" y="229" width="0.1843%" height="15" fill="rgb(221,78,26)"/><text x="24.0521%" y="239.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (195 samples, 1.38%)</title><rect x="22.6538%" y="309" width="1.3822%" height="15" fill="rgb(250,127,30)"/><text x="22.9038%" y="319.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (18 samples, 0.13%)</title><rect x="24.1636%" y="309" width="0.1276%" height="15" fill="rgb(230,49,44)"/><text x="24.4136%" y="319.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (18 samples, 0.13%)</title><rect x="24.1636%" y="293" width="0.1276%" height="15" fill="rgb(229,67,23)"/><text x="24.4136%" y="303.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (18 samples, 0.13%)</title><rect x="24.1636%" y="277" width="0.1276%" height="15" fill="rgb(249,83,47)"/><text x="24.4136%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (18 samples, 0.13%)</title><rect x="24.1636%" y="261" width="0.1276%" height="15" fill="rgb(215,43,3)"/><text x="24.4136%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (18 samples, 0.13%)</title><rect x="24.1636%" y="245" width="0.1276%" height="15" fill="rgb(238,154,13)"/><text x="24.4136%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (18 samples, 0.13%)</title><rect x="24.1636%" y="229" width="0.1276%" height="15" fill="rgb(219,56,2)"/><text x="24.4136%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (18 samples, 0.13%)</title><rect x="24.1636%" y="213" width="0.1276%" height="15" fill="rgb(233,0,4)"/><text x="24.4136%" y="223.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (18 samples, 0.13%)</title><rect x="24.1636%" y="197" width="0.1276%" height="15" fill="rgb(235,30,7)"/><text x="24.4136%" y="207.50"></text></g><g><title>std::allocator&lt;char&gt;::allocate (18 samples, 0.13%)</title><rect x="24.1636%" y="181" width="0.1276%" height="15" fill="rgb(250,79,13)"/><text x="24.4136%" y="191.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (18 samples, 0.13%)</title><rect x="24.1636%" y="165" width="0.1276%" height="15" fill="rgb(211,146,34)"/><text x="24.4136%" y="175.50"></text></g><g><title>operator new (18 samples, 0.13%)</title><rect x="24.1636%" y="149" width="0.1276%" height="15" fill="rgb(228,22,38)"/><text x="24.4136%" y="159.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (25 samples, 0.18%)</title><rect x="24.2912%" y="309" width="0.1772%" height="15" fill="rgb(235,168,5)"/><text x="24.5412%" y="319.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (25 samples, 0.18%)</title><rect x="24.2912%" y="293" width="0.1772%" height="15" fill="rgb(221,155,16)"/><text x="24.5412%" y="303.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (21 samples, 0.15%)</title><rect x="24.3195%" y="277" width="0.1489%" height="15" fill="rgb(215,215,53)"/><text x="24.5695%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (21 samples, 0.15%)</title><rect x="24.3195%" y="261" width="0.1489%" height="15" fill="rgb(223,4,10)"/><text x="24.5695%" y="271.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (16 samples, 0.11%)</title><rect x="24.4684%" y="309" width="0.1134%" height="15" fill="rgb(234,103,6)"/><text x="24.7184%" y="319.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (16 samples, 0.11%)</title><rect x="24.4684%" y="293" width="0.1134%" height="15" fill="rgb(227,97,0)"/><text x="24.7184%" y="303.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (16 samples, 0.11%)</title><rect x="24.4684%" y="277" width="0.1134%" height="15" fill="rgb(234,150,53)"/><text x="24.7184%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (16 samples, 0.11%)</title><rect x="24.4684%" y="261" width="0.1134%" height="15" fill="rgb(228,201,54)"/><text x="24.7184%" y="271.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (16 samples, 0.11%)</title><rect x="24.4684%" y="245" width="0.1134%" height="15" fill="rgb(222,22,37)"/><text x="24.7184%" y="255.50"></text></g><g><title>std::allocator&lt;char&gt;::deallocate (16 samples, 0.11%)</title><rect x="24.4684%" y="229" width="0.1134%" height="15" fill="rgb(237,53,32)"/><text x="24.7184%" y="239.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (16 samples, 0.11%)</title><rect x="24.4684%" y="213" width="0.1134%" height="15" fill="rgb(233,25,53)"/><text x="24.7184%" y="223.50"></text></g><g><title>directory_entries_with_paths (294 samples, 2.08%)</title><rect x="22.6538%" y="325" width="2.0839%" height="15" fill="rgb(210,40,34)"/><text x="22.9038%" y="335.50">d..</text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (22 samples, 0.16%)</title><rect x="24.5818%" y="309" width="0.1559%" height="15" fill="rgb(241,220,44)"/><text x="24.8318%" y="319.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (421 samples, 2.98%)</title><rect x="21.7820%" y="341" width="2.9841%" height="15" fill="rgb(235,28,35)"/><text x="22.0320%" y="351.50">gen..</text></g><g><title>directory_entries_with_paths (15 samples, 0.11%)</title><rect x="24.9716%" y="293" width="0.1063%" height="15" fill="rgb(210,56,17)"/><text x="25.2216%" y="303.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (16 samples, 0.11%)</title><rect x="25.2906%" y="213" width="0.1134%" height="15" fill="rgb(224,130,29)"/><text x="25.5406%" y="223.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (17 samples, 0.12%)</title><rect x="25.2906%" y="229" width="0.1205%" height="15" fill="rgb(235,212,8)"/><text x="25.5406%" y="239.50"></text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (55 samples, 0.39%)</title><rect x="25.0851%" y="245" width="0.3898%" height="15" fill="rgb(223,33,50)"/><text x="25.3351%" y="255.50"></text></g><g><title>is_special (15 samples, 0.11%)</title><rect x="25.8010%" y="165" width="0.1063%" height="15" fill="rgb(219,149,13)"/><text x="26.0510%" y="175.50"></text></g><g><title>__alloc_dir (33 samples, 0.23%)</title><rect x="25.9144%" y="149" width="0.2339%" height="15" fill="rgb(250,156,29)"/><text x="26.1644%" y="159.50"></text></g><g><title>__GI___libc_malloc (30 samples, 0.21%)</title><rect x="25.9356%" y="133" width="0.2126%" height="15" fill="rgb(216,193,19)"/><text x="26.1856%" y="143.50"></text></g><g><title>_int_malloc (27 samples, 0.19%)</title><rect x="25.9569%" y="117" width="0.1914%" height="15" fill="rgb(216,135,14)"/><text x="26.2069%" y="127.50"></text></g><g><title>opendir_tail (38 samples, 0.27%)</title><rect x="25.9073%" y="165" width="0.2694%" height="15" fill="rgb(241,47,5)"/><text x="26.1573%" y="175.50"></text></g><g><title>generator&lt;dirent&gt;::begin (98 samples, 0.69%)</title><rect x="25.4891%" y="229" width="0.6946%" height="15" fill="rgb(233,42,35)"/><text x="25.7391%" y="239.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::iterator (98 samples, 0.69%)</title><rect x="25.4891%" y="213" width="0.6946%" height="15" fill="rgb(231,13,6)"/><text x="25.7391%" y="223.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (98 samples, 0.69%)</title><rect x="25.4891%" y="197" width="0.6946%" height="15" fill="rgb(207,181,40)"/><text x="25.7391%" y="207.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (98 samples, 0.69%)</title><rect x="25.4891%" y="181" width="0.6946%" height="15" fill="rgb(254,173,49)"/><text x="25.7391%" y="191.50"></text></g><g><title>directory_entries_with_paths (139 samples, 0.99%)</title><rect x="25.4749%" y="245" width="0.9853%" height="15" fill="rgb(221,1,38)"/><text x="25.7249%" y="255.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::begin (199 samples, 1.41%)</title><rect x="25.0780%" y="293" width="1.4105%" height="15" fill="rgb(206,124,46)"/><text x="25.3280%" y="303.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::iterator (199 samples, 1.41%)</title><rect x="25.0780%" y="277" width="1.4105%" height="15" fill="rgb(249,21,11)"/><text x="25.3280%" y="287.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (198 samples, 1.40%)</title><rect x="25.0851%" y="261" width="1.4035%" height="15" fill="rgb(222,201,40)"/><text x="25.3351%" y="271.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (247 samples, 1.75%)</title><rect x="24.8157%" y="325" width="1.7508%" height="15" fill="rgb(235,61,29)"/><text x="25.0657%" y="335.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (247 samples, 1.75%)</title><rect x="24.8157%" y="309" width="1.7508%" height="15" fill="rgb(219,207,3)"/><text x="25.0657%" y="319.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (292 samples, 2.07%)</title><rect x="24.7661%" y="341" width="2.0697%" height="15" fill="rgb(222,56,46)"/><text x="25.0161%" y="351.50">g..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (37 samples, 0.26%)</title><rect x="26.5736%" y="325" width="0.2623%" height="15" fill="rgb(239,76,54)"/><text x="26.8236%" y="335.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (36 samples, 0.26%)</title><rect x="26.5807%" y="309" width="0.2552%" height="15" fill="rgb(231,124,27)"/><text x="26.8307%" y="319.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (36 samples, 0.26%)</title><rect x="26.5807%" y="293" width="0.2552%" height="15" fill="rgb(249,195,6)"/><text x="26.8307%" y="303.50"></text></g><g><title>recursive_directory_entries (27 samples, 0.19%)</title><rect x="26.8713%" y="341" width="0.1914%" height="15" fill="rgb(237,174,47)"/><text x="27.1213%" y="351.50"></text></g><g><title>operator new (25 samples, 0.18%)</title><rect x="26.8855%" y="325" width="0.1772%" height="15" fill="rgb(206,201,31)"/><text x="27.1355%" y="335.50"></text></g><g><title>__GI___libc_malloc (25 samples, 0.18%)</title><rect x="26.8855%" y="309" width="0.1772%" height="15" fill="rgb(231,57,52)"/><text x="27.1355%" y="319.50"></text></g><g><title>_int_malloc (19 samples, 0.13%)</title><rect x="26.9280%" y="293" width="0.1347%" height="15" fill="rgb(248,177,22)"/><text x="27.1780%" y="303.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (843 samples, 5.98%)</title><rect x="21.0944%" y="357" width="5.9753%" height="15" fill="rgb(215,211,37)"/><text x="21.3444%" y="367.50">_Z27recu..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::is_resumable (49 samples, 0.35%)</title><rect x="27.1123%" y="357" width="0.3473%" height="15" fill="rgb(241,128,51)"/><text x="27.3623%" y="367.50"></text></g><g><title>__GI___libc_free (15 samples, 0.11%)</title><rect x="28.4094%" y="197" width="0.1063%" height="15" fill="rgb(227,165,31)"/><text x="28.6594%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (19 samples, 0.13%)</title><rect x="28.4023%" y="293" width="0.1347%" height="15" fill="rgb(228,167,24)"/><text x="28.6523%" y="303.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (19 samples, 0.13%)</title><rect x="28.4023%" y="277" width="0.1347%" height="15" fill="rgb(228,143,12)"/><text x="28.6523%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (18 samples, 0.13%)</title><rect x="28.4094%" y="261" width="0.1276%" height="15" fill="rgb(249,149,8)"/><text x="28.6594%" y="271.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (18 samples, 0.13%)</title><rect x="28.4094%" y="245" width="0.1276%" height="15" fill="rgb(243,35,44)"/><text x="28.6594%" y="255.50"></text></g><g><title>std::allocator&lt;char&gt;::deallocate (18 samples, 0.13%)</title><rect x="28.4094%" y="229" width="0.1276%" height="15" fill="rgb(246,89,9)"/><text x="28.6594%" y="239.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (18 samples, 0.13%)</title><rect x="28.4094%" y="213" width="0.1276%" height="15" fill="rgb(233,213,13)"/><text x="28.6594%" y="223.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (18 samples, 0.13%)</title><rect x="28.5370%" y="293" width="0.1276%" height="15" fill="rgb(233,141,41)"/><text x="28.7870%" y="303.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (18 samples, 0.13%)</title><rect x="28.5370%" y="277" width="0.1276%" height="15" fill="rgb(239,167,4)"/><text x="28.7870%" y="287.50"></text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (115 samples, 0.82%)</title><rect x="28.1542%" y="309" width="0.8151%" height="15" fill="rgb(209,217,16)"/><text x="28.4042%" y="319.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (27 samples, 0.19%)</title><rect x="28.7780%" y="293" width="0.1914%" height="15" fill="rgb(219,88,35)"/><text x="29.0280%" y="303.50"></text></g><g><title>__closedir (19 samples, 0.13%)</title><rect x="29.5152%" y="261" width="0.1347%" height="15" fill="rgb(220,193,23)"/><text x="29.7652%" y="271.50"></text></g><g><title>__GI___libc_free (15 samples, 0.11%)</title><rect x="29.5435%" y="245" width="0.1063%" height="15" fill="rgb(230,90,52)"/><text x="29.7935%" y="255.50"></text></g><g><title>__readdir64 (22 samples, 0.16%)</title><rect x="29.6498%" y="261" width="0.1559%" height="15" fill="rgb(252,106,19)"/><text x="29.8998%" y="271.50"></text></g><g><title>generator&lt;dirent&gt;::promise_type::yield_value (18 samples, 0.13%)</title><rect x="29.8058%" y="261" width="0.1276%" height="15" fill="rgb(206,74,20)"/><text x="30.0558%" y="271.50"></text></g><g><title>std::optional&lt;dirent&gt;::operator=&lt;dirent&gt; (18 samples, 0.13%)</title><rect x="29.8058%" y="245" width="0.1276%" height="15" fill="rgb(230,138,44)"/><text x="30.0558%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (19 samples, 0.13%)</title><rect x="29.9405%" y="245" width="0.1347%" height="15" fill="rgb(235,182,43)"/><text x="30.1905%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (19 samples, 0.13%)</title><rect x="29.9405%" y="229" width="0.1347%" height="15" fill="rgb(242,16,51)"/><text x="30.1905%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (19 samples, 0.13%)</title><rect x="29.9405%" y="213" width="0.1347%" height="15" fill="rgb(248,9,4)"/><text x="30.1905%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (19 samples, 0.13%)</title><rect x="29.9405%" y="197" width="0.1347%" height="15" fill="rgb(210,31,22)"/><text x="30.1905%" y="207.50"></text></g><g><title>__strlen_avx2 (15 samples, 0.11%)</title><rect x="30.2594%" y="197" width="0.1063%" height="15" fill="rgb(239,54,39)"/><text x="30.5094%" y="207.50"></text></g><g><title>is_special (62 samples, 0.44%)</title><rect x="29.9334%" y="261" width="0.4395%" height="15" fill="rgb(230,99,41)"/><text x="30.1834%" y="271.50"></text></g><g><title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (39 samples, 0.28%)</title><rect x="30.0964%" y="245" width="0.2764%" height="15" fill="rgb(253,106,12)"/><text x="30.3464%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (38 samples, 0.27%)</title><rect x="30.1035%" y="229" width="0.2694%" height="15" fill="rgb(213,46,41)"/><text x="30.3535%" y="239.50"></text></g><g><title>std::char_traits&lt;char&gt;::length (21 samples, 0.15%)</title><rect x="30.2240%" y="213" width="0.1489%" height="15" fill="rgb(215,133,35)"/><text x="30.4740%" y="223.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (199 samples, 1.41%)</title><rect x="28.9694%" y="277" width="1.4105%" height="15" fill="rgb(213,28,5)"/><text x="29.2194%" y="287.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (204 samples, 1.45%)</title><rect x="28.9694%" y="293" width="1.4460%" height="15" fill="rgb(215,77,49)"/><text x="29.2194%" y="303.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (23 samples, 0.16%)</title><rect x="30.4154%" y="293" width="0.1630%" height="15" fill="rgb(248,100,22)"/><text x="30.6654%" y="303.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (23 samples, 0.16%)</title><rect x="30.4154%" y="277" width="0.1630%" height="15" fill="rgb(208,67,9)"/><text x="30.6654%" y="287.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (23 samples, 0.16%)</title><rect x="30.4154%" y="261" width="0.1630%" height="15" fill="rgb(219,133,21)"/><text x="30.6654%" y="271.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (23 samples, 0.16%)</title><rect x="30.4154%" y="245" width="0.1630%" height="15" fill="rgb(246,46,29)"/><text x="30.6654%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (16 samples, 0.11%)</title><rect x="30.5784%" y="293" width="0.1134%" height="15" fill="rgb(246,185,52)"/><text x="30.8284%" y="303.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (16 samples, 0.11%)</title><rect x="30.5784%" y="277" width="0.1134%" height="15" fill="rgb(252,136,11)"/><text x="30.8284%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (16 samples, 0.11%)</title><rect x="30.5784%" y="261" width="0.1134%" height="15" fill="rgb(219,138,53)"/><text x="30.8284%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (16 samples, 0.11%)</title><rect x="30.5784%" y="245" width="0.1134%" height="15" fill="rgb(211,51,23)"/><text x="30.8284%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (16 samples, 0.11%)</title><rect x="30.5784%" y="229" width="0.1134%" height="15" fill="rgb(247,221,28)"/><text x="30.8284%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (16 samples, 0.11%)</title><rect x="30.5784%" y="213" width="0.1134%" height="15" fill="rgb(251,222,45)"/><text x="30.8284%" y="223.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (15 samples, 0.11%)</title><rect x="30.6918%" y="293" width="0.1063%" height="15" fill="rgb(217,162,53)"/><text x="30.9418%" y="303.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (15 samples, 0.11%)</title><rect x="30.6918%" y="277" width="0.1063%" height="15" fill="rgb(229,93,14)"/><text x="30.9418%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (15 samples, 0.11%)</title><rect x="30.6918%" y="261" width="0.1063%" height="15" fill="rgb(209,67,49)"/><text x="30.9418%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (15 samples, 0.11%)</title><rect x="30.6918%" y="245" width="0.1063%" height="15" fill="rgb(213,87,29)"/><text x="30.9418%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (15 samples, 0.11%)</title><rect x="30.6918%" y="229" width="0.1063%" height="15" fill="rgb(205,151,52)"/><text x="30.9418%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (15 samples, 0.11%)</title><rect x="30.6918%" y="213" width="0.1063%" height="15" fill="rgb(253,215,39)"/><text x="30.9418%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (15 samples, 0.11%)</title><rect x="30.6918%" y="197" width="0.1063%" height="15" fill="rgb(221,220,41)"/><text x="30.9418%" y="207.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (15 samples, 0.11%)</title><rect x="30.6918%" y="181" width="0.1063%" height="15" fill="rgb(218,133,21)"/><text x="30.9418%" y="191.50"></text></g><g><title>std::allocator&lt;char&gt;::allocate (15 samples, 0.11%)</title><rect x="30.6918%" y="165" width="0.1063%" height="15" fill="rgb(221,193,43)"/><text x="30.9418%" y="175.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (15 samples, 0.11%)</title><rect x="30.6918%" y="149" width="0.1063%" height="15" fill="rgb(240,128,52)"/><text x="30.9418%" y="159.50"></text></g><g><title>operator new (15 samples, 0.11%)</title><rect x="30.6918%" y="133" width="0.1063%" height="15" fill="rgb(253,114,12)"/><text x="30.9418%" y="143.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (17 samples, 0.12%)</title><rect x="30.9257%" y="229" width="0.1205%" height="15" fill="rgb(215,223,47)"/><text x="31.1757%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (17 samples, 0.12%)</title><rect x="30.9257%" y="213" width="0.1205%" height="15" fill="rgb(248,225,23)"/><text x="31.1757%" y="223.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (17 samples, 0.12%)</title><rect x="30.9257%" y="197" width="0.1205%" height="15" fill="rgb(250,108,0)"/><text x="31.1757%" y="207.50"></text></g><g><title>std::allocator&lt;char&gt;::deallocate (17 samples, 0.12%)</title><rect x="30.9257%" y="181" width="0.1205%" height="15" fill="rgb(228,208,7)"/><text x="31.1757%" y="191.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (17 samples, 0.12%)</title><rect x="30.9257%" y="165" width="0.1205%" height="15" fill="rgb(244,45,10)"/><text x="31.1757%" y="175.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (40 samples, 0.28%)</title><rect x="30.7981%" y="293" width="0.2835%" height="15" fill="rgb(207,125,25)"/><text x="31.0481%" y="303.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (40 samples, 0.28%)</title><rect x="30.7981%" y="277" width="0.2835%" height="15" fill="rgb(210,195,18)"/><text x="31.0481%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (34 samples, 0.24%)</title><rect x="30.8407%" y="261" width="0.2410%" height="15" fill="rgb(249,80,12)"/><text x="31.0907%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (34 samples, 0.24%)</title><rect x="30.8407%" y="245" width="0.2410%" height="15" fill="rgb(221,65,9)"/><text x="31.0907%" y="255.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (26 samples, 0.18%)</title><rect x="31.0817%" y="293" width="0.1843%" height="15" fill="rgb(235,49,36)"/><text x="31.3317%" y="303.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (26 samples, 0.18%)</title><rect x="31.0817%" y="277" width="0.1843%" height="15" fill="rgb(225,32,20)"/><text x="31.3317%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (26 samples, 0.18%)</title><rect x="31.0817%" y="261" width="0.1843%" height="15" fill="rgb(215,141,46)"/><text x="31.3317%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (26 samples, 0.18%)</title><rect x="31.0817%" y="245" width="0.1843%" height="15" fill="rgb(250,160,47)"/><text x="31.3317%" y="255.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (26 samples, 0.18%)</title><rect x="31.0817%" y="229" width="0.1843%" height="15" fill="rgb(216,222,40)"/><text x="31.3317%" y="239.50"></text></g><g><title>std::allocator&lt;char&gt;::deallocate (26 samples, 0.18%)</title><rect x="31.0817%" y="213" width="0.1843%" height="15" fill="rgb(234,217,39)"/><text x="31.3317%" y="223.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (26 samples, 0.18%)</title><rect x="31.0817%" y="197" width="0.1843%" height="15" fill="rgb(207,178,40)"/><text x="31.3317%" y="207.50"></text></g><g><title>__GI___libc_free (26 samples, 0.18%)</title><rect x="31.0817%" y="181" width="0.1843%" height="15" fill="rgb(221,136,13)"/><text x="31.3317%" y="191.50"></text></g><g><title>_int_free (19 samples, 0.13%)</title><rect x="31.1313%" y="165" width="0.1347%" height="15" fill="rgb(249,199,10)"/><text x="31.3813%" y="175.50"></text></g><g><title>directory_entries_with_paths (351 samples, 2.49%)</title><rect x="28.9694%" y="309" width="2.4880%" height="15" fill="rgb(249,222,13)"/><text x="29.2194%" y="319.50">di..</text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (27 samples, 0.19%)</title><rect x="31.2659%" y="293" width="0.1914%" height="15" fill="rgb(244,185,38)"/><text x="31.5159%" y="303.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (474 samples, 3.36%)</title><rect x="28.1542%" y="325" width="3.3598%" height="15" fill="rgb(236,202,9)"/><text x="28.4042%" y="335.50">gen..</text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (29 samples, 0.21%)</title><rect x="31.6629%" y="229" width="0.2056%" height="15" fill="rgb(250,229,37)"/><text x="31.9129%" y="239.50"></text></g><g><title>__alloc_dir (20 samples, 0.14%)</title><rect x="32.2087%" y="133" width="0.1418%" height="15" fill="rgb(206,174,23)"/><text x="32.4587%" y="143.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.14%)</title><rect x="32.2087%" y="117" width="0.1418%" height="15" fill="rgb(211,33,43)"/><text x="32.4587%" y="127.50"></text></g><g><title>_int_malloc (18 samples, 0.13%)</title><rect x="32.2229%" y="101" width="0.1276%" height="15" fill="rgb(245,58,50)"/><text x="32.4729%" y="111.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (69 samples, 0.49%)</title><rect x="31.8897%" y="165" width="0.4891%" height="15" fill="rgb(244,68,36)"/><text x="32.1397%" y="175.50"></text></g><g><title>opendir_tail (24 samples, 0.17%)</title><rect x="32.2087%" y="149" width="0.1701%" height="15" fill="rgb(232,229,15)"/><text x="32.4587%" y="159.50"></text></g><g><title>generator&lt;dirent&gt;::begin (70 samples, 0.50%)</title><rect x="31.8897%" y="213" width="0.4962%" height="15" fill="rgb(254,30,23)"/><text x="32.1397%" y="223.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::iterator (70 samples, 0.50%)</title><rect x="31.8897%" y="197" width="0.4962%" height="15" fill="rgb(235,160,14)"/><text x="32.1397%" y="207.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (70 samples, 0.50%)</title><rect x="31.8897%" y="181" width="0.4962%" height="15" fill="rgb(212,155,44)"/><text x="32.1397%" y="191.50"></text></g><g><title>directory_entries_with_paths (107 samples, 0.76%)</title><rect x="31.8684%" y="229" width="0.7584%" height="15" fill="rgb(226,2,50)"/><text x="32.1184%" y="239.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::begin (139 samples, 0.99%)</title><rect x="31.6558%" y="277" width="0.9853%" height="15" fill="rgb(234,177,6)"/><text x="31.9058%" y="287.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::iterator (139 samples, 0.99%)</title><rect x="31.6558%" y="261" width="0.9853%" height="15" fill="rgb(217,24,9)"/><text x="31.9058%" y="271.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (138 samples, 0.98%)</title><rect x="31.6629%" y="245" width="0.9782%" height="15" fill="rgb(220,13,46)"/><text x="31.9129%" y="255.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (166 samples, 1.18%)</title><rect x="31.5282%" y="309" width="1.1766%" height="15" fill="rgb(239,221,27)"/><text x="31.7782%" y="319.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (166 samples, 1.18%)</title><rect x="31.5282%" y="293" width="1.1766%" height="15" fill="rgb(222,198,25)"/><text x="31.7782%" y="303.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (208 samples, 1.47%)</title><rect x="31.5140%" y="325" width="1.4743%" height="15" fill="rgb(211,99,13)"/><text x="31.7640%" y="335.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (40 samples, 0.28%)</title><rect x="32.7048%" y="309" width="0.2835%" height="15" fill="rgb(232,111,31)"/><text x="32.9548%" y="319.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (39 samples, 0.28%)</title><rect x="32.7119%" y="293" width="0.2764%" height="15" fill="rgb(245,82,37)"/><text x="32.9619%" y="303.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (39 samples, 0.28%)</title><rect x="32.7119%" y="277" width="0.2764%" height="15" fill="rgb(227,149,46)"/><text x="32.9619%" y="287.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (792 samples, 5.61%)</title><rect x="27.5163%" y="341" width="5.6138%" height="15" fill="rgb(218,36,50)"/><text x="27.7663%" y="351.50">_Z27rec..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::is_resumable (59 samples, 0.42%)</title><rect x="33.1656%" y="341" width="0.4182%" height="15" fill="rgb(226,80,48)"/><text x="33.4156%" y="351.50"></text></g><g><title>std::__n4861::coroutine_handle&lt;generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type&gt;::operator bool (19 samples, 0.13%)</title><rect x="33.4491%" y="325" width="0.1347%" height="15" fill="rgb(238,224,15)"/><text x="33.6991%" y="335.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (15 samples, 0.11%)</title><rect x="34.7037%" y="277" width="0.1063%" height="15" fill="rgb(241,136,10)"/><text x="34.9537%" y="287.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (15 samples, 0.11%)</title><rect x="34.7037%" y="261" width="0.1063%" height="15" fill="rgb(208,32,45)"/><text x="34.9537%" y="271.50"></text></g><g><title>__GI___libc_free (22 samples, 0.16%)</title><rect x="34.8313%" y="181" width="0.1559%" height="15" fill="rgb(207,135,9)"/><text x="35.0813%" y="191.50"></text></g><g><title>_int_free (15 samples, 0.11%)</title><rect x="34.8809%" y="165" width="0.1063%" height="15" fill="rgb(206,86,44)"/><text x="35.1309%" y="175.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (28 samples, 0.20%)</title><rect x="34.8100%" y="277" width="0.1985%" height="15" fill="rgb(245,177,15)"/><text x="35.0600%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (28 samples, 0.20%)</title><rect x="34.8100%" y="261" width="0.1985%" height="15" fill="rgb(206,64,50)"/><text x="35.0600%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (27 samples, 0.19%)</title><rect x="34.8171%" y="245" width="0.1914%" height="15" fill="rgb(234,36,40)"/><text x="35.0671%" y="255.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (25 samples, 0.18%)</title><rect x="34.8313%" y="229" width="0.1772%" height="15" fill="rgb(213,64,8)"/><text x="35.0813%" y="239.50"></text></g><g><title>std::allocator&lt;char&gt;::deallocate (25 samples, 0.18%)</title><rect x="34.8313%" y="213" width="0.1772%" height="15" fill="rgb(210,75,36)"/><text x="35.0813%" y="223.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (25 samples, 0.18%)</title><rect x="34.8313%" y="197" width="0.1772%" height="15" fill="rgb(229,88,21)"/><text x="35.0813%" y="207.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (53 samples, 0.38%)</title><rect x="35.0085%" y="277" width="0.3757%" height="15" fill="rgb(252,204,47)"/><text x="35.2585%" y="287.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (53 samples, 0.38%)</title><rect x="35.0085%" y="261" width="0.3757%" height="15" fill="rgb(208,77,27)"/><text x="35.2585%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (24 samples, 0.17%)</title><rect x="35.3842%" y="261" width="0.1701%" height="15" fill="rgb(221,76,26)"/><text x="35.6342%" y="271.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (27 samples, 0.19%)</title><rect x="35.3842%" y="277" width="0.1914%" height="15" fill="rgb(225,139,18)"/><text x="35.6342%" y="287.50"></text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (174 samples, 1.23%)</title><rect x="34.5549%" y="293" width="1.2333%" height="15" fill="rgb(230,137,11)"/><text x="34.8049%" y="303.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (29 samples, 0.21%)</title><rect x="35.5826%" y="277" width="0.2056%" height="15" fill="rgb(212,28,1)"/><text x="35.8326%" y="287.50"></text></g><g><title>__readdir64 (23 samples, 0.16%)</title><rect x="36.5537%" y="245" width="0.1630%" height="15" fill="rgb(248,164,17)"/><text x="36.8037%" y="255.50"></text></g><g><title>generator&lt;dirent&gt;::promise_type::yield_value (26 samples, 0.18%)</title><rect x="36.7168%" y="245" width="0.1843%" height="15" fill="rgb(222,171,42)"/><text x="36.9668%" y="255.50"></text></g><g><title>std::optional&lt;dirent&gt;::operator=&lt;dirent&gt; (26 samples, 0.18%)</title><rect x="36.7168%" y="229" width="0.1843%" height="15" fill="rgb(243,84,45)"/><text x="36.9668%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (29 samples, 0.21%)</title><rect x="36.9365%" y="229" width="0.2056%" height="15" fill="rgb(252,49,23)"/><text x="37.1865%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (25 samples, 0.18%)</title><rect x="36.9648%" y="213" width="0.1772%" height="15" fill="rgb(215,19,7)"/><text x="37.2148%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (25 samples, 0.18%)</title><rect x="36.9648%" y="197" width="0.1772%" height="15" fill="rgb(238,81,41)"/><text x="37.2148%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (24 samples, 0.17%)</title><rect x="36.9719%" y="181" width="0.1701%" height="15" fill="rgb(210,199,37)"/><text x="37.2219%" y="191.50"></text></g><g><title>__strlen_avx2 (22 samples, 0.16%)</title><rect x="37.2696%" y="181" width="0.1559%" height="15" fill="rgb(244,192,49)"/><text x="37.5196%" y="191.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (233 samples, 1.65%)</title><rect x="35.7882%" y="261" width="1.6515%" height="15" fill="rgb(226,211,11)"/><text x="36.0382%" y="271.50"></text></g><g><title>is_special (76 samples, 0.54%)</title><rect x="36.9010%" y="245" width="0.5387%" height="15" fill="rgb(236,162,54)"/><text x="37.1510%" y="255.50"></text></g><g><title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (42 samples, 0.30%)</title><rect x="37.1420%" y="229" width="0.2977%" height="15" fill="rgb(220,229,9)"/><text x="37.3920%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (41 samples, 0.29%)</title><rect x="37.1491%" y="213" width="0.2906%" height="15" fill="rgb(250,87,22)"/><text x="37.3991%" y="223.50"></text></g><g><title>std::char_traits&lt;char&gt;::length (29 samples, 0.21%)</title><rect x="37.2342%" y="197" width="0.2056%" height="15" fill="rgb(239,43,17)"/><text x="37.4842%" y="207.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (239 samples, 1.69%)</title><rect x="35.7882%" y="277" width="1.6941%" height="15" fill="rgb(231,177,25)"/><text x="36.0382%" y="287.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (29 samples, 0.21%)</title><rect x="37.4823%" y="277" width="0.2056%" height="15" fill="rgb(219,179,1)"/><text x="37.7323%" y="287.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (29 samples, 0.21%)</title><rect x="37.4823%" y="261" width="0.2056%" height="15" fill="rgb(238,219,53)"/><text x="37.7323%" y="271.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (29 samples, 0.21%)</title><rect x="37.4823%" y="245" width="0.2056%" height="15" fill="rgb(232,167,36)"/><text x="37.7323%" y="255.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (29 samples, 0.21%)</title><rect x="37.4823%" y="229" width="0.2056%" height="15" fill="rgb(244,19,51)"/><text x="37.7323%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (15 samples, 0.11%)</title><rect x="37.6878%" y="277" width="0.1063%" height="15" fill="rgb(224,6,22)"/><text x="37.9378%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (15 samples, 0.11%)</title><rect x="37.6878%" y="261" width="0.1063%" height="15" fill="rgb(224,145,5)"/><text x="37.9378%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (15 samples, 0.11%)</title><rect x="37.6878%" y="245" width="0.1063%" height="15" fill="rgb(234,130,49)"/><text x="37.9378%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (15 samples, 0.11%)</title><rect x="37.6878%" y="229" width="0.1063%" height="15" fill="rgb(254,6,2)"/><text x="37.9378%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (15 samples, 0.11%)</title><rect x="37.6878%" y="213" width="0.1063%" height="15" fill="rgb(208,96,46)"/><text x="37.9378%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (15 samples, 0.11%)</title><rect x="37.6878%" y="197" width="0.1063%" height="15" fill="rgb(239,3,39)"/><text x="37.9378%" y="207.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (23 samples, 0.16%)</title><rect x="37.7942%" y="277" width="0.1630%" height="15" fill="rgb(233,210,1)"/><text x="38.0442%" y="287.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (23 samples, 0.16%)</title><rect x="37.7942%" y="261" width="0.1630%" height="15" fill="rgb(244,137,37)"/><text x="38.0442%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (23 samples, 0.16%)</title><rect x="37.7942%" y="245" width="0.1630%" height="15" fill="rgb(240,136,2)"/><text x="38.0442%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (23 samples, 0.16%)</title><rect x="37.7942%" y="229" width="0.1630%" height="15" fill="rgb(239,18,37)"/><text x="38.0442%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (23 samples, 0.16%)</title><rect x="37.7942%" y="213" width="0.1630%" height="15" fill="rgb(218,185,22)"/><text x="38.0442%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (23 samples, 0.16%)</title><rect x="37.7942%" y="197" width="0.1630%" height="15" fill="rgb(225,218,4)"/><text x="38.0442%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (23 samples, 0.16%)</title><rect x="37.7942%" y="181" width="0.1630%" height="15" fill="rgb(230,182,32)"/><text x="38.0442%" y="191.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (23 samples, 0.16%)</title><rect x="37.7942%" y="165" width="0.1630%" height="15" fill="rgb(242,56,43)"/><text x="38.0442%" y="175.50"></text></g><g><title>std::allocator&lt;char&gt;::allocate (23 samples, 0.16%)</title><rect x="37.7942%" y="149" width="0.1630%" height="15" fill="rgb(233,99,24)"/><text x="38.0442%" y="159.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (23 samples, 0.16%)</title><rect x="37.7942%" y="133" width="0.1630%" height="15" fill="rgb(234,209,42)"/><text x="38.0442%" y="143.50"></text></g><g><title>operator new (23 samples, 0.16%)</title><rect x="37.7942%" y="117" width="0.1630%" height="15" fill="rgb(227,7,12)"/><text x="38.0442%" y="127.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.13%)</title><rect x="37.8296%" y="101" width="0.1276%" height="15" fill="rgb(245,203,43)"/><text x="38.0796%" y="111.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (23 samples, 0.16%)</title><rect x="38.0635%" y="213" width="0.1630%" height="15" fill="rgb(238,205,33)"/><text x="38.3135%" y="223.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (22 samples, 0.16%)</title><rect x="38.0706%" y="197" width="0.1559%" height="15" fill="rgb(231,56,7)"/><text x="38.3206%" y="207.50"></text></g><g><title>std::allocator&lt;char&gt;::allocate (22 samples, 0.16%)</title><rect x="38.0706%" y="181" width="0.1559%" height="15" fill="rgb(244,186,29)"/><text x="38.3206%" y="191.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (22 samples, 0.16%)</title><rect x="38.0706%" y="165" width="0.1559%" height="15" fill="rgb(234,111,31)"/><text x="38.3206%" y="175.50"></text></g><g><title>operator new (21 samples, 0.15%)</title><rect x="38.0777%" y="149" width="0.1489%" height="15" fill="rgb(241,149,10)"/><text x="38.3277%" y="159.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.14%)</title><rect x="38.0848%" y="133" width="0.1418%" height="15" fill="rgb(249,206,44)"/><text x="38.3348%" y="143.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (56 samples, 0.40%)</title><rect x="37.9572%" y="277" width="0.3969%" height="15" fill="rgb(251,153,30)"/><text x="38.2072%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (56 samples, 0.40%)</title><rect x="37.9572%" y="261" width="0.3969%" height="15" fill="rgb(239,152,38)"/><text x="38.2072%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (48 samples, 0.34%)</title><rect x="38.0139%" y="245" width="0.3402%" height="15" fill="rgb(249,139,47)"/><text x="38.2639%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (48 samples, 0.34%)</title><rect x="38.0139%" y="229" width="0.3402%" height="15" fill="rgb(244,64,35)"/><text x="38.2639%" y="239.50"></text></g><g><title>__GI___libc_free (21 samples, 0.15%)</title><rect x="38.3541%" y="165" width="0.1489%" height="15" fill="rgb(216,46,15)"/><text x="38.6041%" y="175.50"></text></g><g><title>_int_free (16 samples, 0.11%)</title><rect x="38.3896%" y="149" width="0.1134%" height="15" fill="rgb(250,74,19)"/><text x="38.6396%" y="159.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (26 samples, 0.18%)</title><rect x="38.3541%" y="277" width="0.1843%" height="15" fill="rgb(249,42,33)"/><text x="38.6041%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (26 samples, 0.18%)</title><rect x="38.3541%" y="261" width="0.1843%" height="15" fill="rgb(242,149,17)"/><text x="38.6041%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (26 samples, 0.18%)</title><rect x="38.3541%" y="245" width="0.1843%" height="15" fill="rgb(244,29,21)"/><text x="38.6041%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (26 samples, 0.18%)</title><rect x="38.3541%" y="229" width="0.1843%" height="15" fill="rgb(220,130,37)"/><text x="38.6041%" y="239.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (26 samples, 0.18%)</title><rect x="38.3541%" y="213" width="0.1843%" height="15" fill="rgb(211,67,2)"/><text x="38.6041%" y="223.50"></text></g><g><title>std::allocator&lt;char&gt;::deallocate (26 samples, 0.18%)</title><rect x="38.3541%" y="197" width="0.1843%" height="15" fill="rgb(235,68,52)"/><text x="38.6041%" y="207.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (26 samples, 0.18%)</title><rect x="38.3541%" y="181" width="0.1843%" height="15" fill="rgb(246,142,3)"/><text x="38.6041%" y="191.50"></text></g><g><title>directory_entries_with_paths (410 samples, 2.91%)</title><rect x="35.7882%" y="293" width="2.9062%" height="15" fill="rgb(241,25,7)"/><text x="36.0382%" y="303.50">di..</text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (22 samples, 0.16%)</title><rect x="38.5384%" y="277" width="0.1559%" height="15" fill="rgb(242,119,39)"/><text x="38.7884%" y="287.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (593 samples, 4.20%)</title><rect x="34.5549%" y="309" width="4.2033%" height="15" fill="rgb(241,98,45)"/><text x="34.8049%" y="319.50">gener..</text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (30 samples, 0.21%)</title><rect x="38.9850%" y="213" width="0.2126%" height="15" fill="rgb(254,28,30)"/><text x="39.2350%" y="223.50"></text></g><g><title>is_special (19 samples, 0.13%)</title><rect x="39.4528%" y="133" width="0.1347%" height="15" fill="rgb(241,142,54)"/><text x="39.7028%" y="143.50"></text></g><g><title>__alloc_dir (17 samples, 0.12%)</title><rect x="39.6016%" y="117" width="0.1205%" height="15" fill="rgb(222,85,15)"/><text x="39.8516%" y="127.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.11%)</title><rect x="39.6087%" y="101" width="0.1134%" height="15" fill="rgb(210,85,47)"/><text x="39.8587%" y="111.50"></text></g><g><title>_int_malloc (16 samples, 0.11%)</title><rect x="39.6087%" y="85" width="0.1134%" height="15" fill="rgb(224,206,25)"/><text x="39.8587%" y="95.50"></text></g><g><title>generator&lt;dirent&gt;::begin (80 samples, 0.57%)</title><rect x="39.1976%" y="197" width="0.5671%" height="15" fill="rgb(243,201,19)"/><text x="39.4476%" y="207.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::iterator (80 samples, 0.57%)</title><rect x="39.1976%" y="181" width="0.5671%" height="15" fill="rgb(236,59,4)"/><text x="39.4476%" y="191.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (80 samples, 0.57%)</title><rect x="39.1976%" y="165" width="0.5671%" height="15" fill="rgb(254,179,45)"/><text x="39.4476%" y="175.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (80 samples, 0.57%)</title><rect x="39.1976%" y="149" width="0.5671%" height="15" fill="rgb(226,14,10)"/><text x="39.4476%" y="159.50"></text></g><g><title>opendir_tail (25 samples, 0.18%)</title><rect x="39.5875%" y="133" width="0.1772%" height="15" fill="rgb(244,27,41)"/><text x="39.8375%" y="143.50"></text></g><g><title>directory_entries_with_paths (111 samples, 0.79%)</title><rect x="39.1976%" y="213" width="0.7868%" height="15" fill="rgb(235,35,32)"/><text x="39.4476%" y="223.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::begin (142 samples, 1.01%)</title><rect x="38.9850%" y="261" width="1.0065%" height="15" fill="rgb(218,68,31)"/><text x="39.2350%" y="271.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::iterator (142 samples, 1.01%)</title><rect x="38.9850%" y="245" width="1.0065%" height="15" fill="rgb(207,120,37)"/><text x="39.2350%" y="255.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (142 samples, 1.01%)</title><rect x="38.9850%" y="229" width="1.0065%" height="15" fill="rgb(227,98,0)"/><text x="39.2350%" y="239.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (180 samples, 1.28%)</title><rect x="38.7865%" y="293" width="1.2759%" height="15" fill="rgb(207,7,3)"/><text x="39.0365%" y="303.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (180 samples, 1.28%)</title><rect x="38.7865%" y="277" width="1.2759%" height="15" fill="rgb(206,98,19)"/><text x="39.0365%" y="287.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (240 samples, 1.70%)</title><rect x="38.7582%" y="309" width="1.7012%" height="15" fill="rgb(217,5,26)"/><text x="39.0082%" y="319.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (55 samples, 0.39%)</title><rect x="40.0695%" y="293" width="0.3898%" height="15" fill="rgb(235,190,38)"/><text x="40.3195%" y="303.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (53 samples, 0.38%)</title><rect x="40.0836%" y="277" width="0.3757%" height="15" fill="rgb(247,86,24)"/><text x="40.3336%" y="287.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (53 samples, 0.38%)</title><rect x="40.0836%" y="261" width="0.3757%" height="15" fill="rgb(205,101,16)"/><text x="40.3336%" y="271.50"></text></g><g><title>recursive_directory_entries (19 samples, 0.13%)</title><rect x="40.5089%" y="309" width="0.1347%" height="15" fill="rgb(246,168,33)"/><text x="40.7589%" y="319.50"></text></g><g><title>operator new (17 samples, 0.12%)</title><rect x="40.5231%" y="293" width="0.1205%" height="15" fill="rgb(231,114,1)"/><text x="40.7731%" y="303.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.12%)</title><rect x="40.5231%" y="277" width="0.1205%" height="15" fill="rgb(207,184,53)"/><text x="40.7731%" y="287.50"></text></g><g><title>_int_malloc (17 samples, 0.12%)</title><rect x="40.5231%" y="261" width="0.1205%" height="15" fill="rgb(224,95,51)"/><text x="40.7731%" y="271.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (991 samples, 7.02%)</title><rect x="33.6334%" y="325" width="7.0244%" height="15" fill="rgb(212,188,45)"/><text x="33.8834%" y="335.50">_Z27recur..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::is_resumable (51 samples, 0.36%)</title><rect x="40.6790%" y="325" width="0.3615%" height="15" fill="rgb(223,154,38)"/><text x="40.9290%" y="335.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (15 samples, 0.11%)</title><rect x="42.1250%" y="229" width="0.1063%" height="15" fill="rgb(251,22,52)"/><text x="42.3750%" y="239.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (15 samples, 0.11%)</title><rect x="42.1250%" y="213" width="0.1063%" height="15" fill="rgb(229,209,22)"/><text x="42.3750%" y="223.50"></text></g><g><title>std::allocator&lt;char&gt;::deallocate (15 samples, 0.11%)</title><rect x="42.1250%" y="197" width="0.1063%" height="15" fill="rgb(234,138,34)"/><text x="42.3750%" y="207.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (15 samples, 0.11%)</title><rect x="42.1250%" y="181" width="0.1063%" height="15" fill="rgb(212,95,11)"/><text x="42.3750%" y="191.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (18 samples, 0.13%)</title><rect x="42.1109%" y="261" width="0.1276%" height="15" fill="rgb(240,179,47)"/><text x="42.3609%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (18 samples, 0.13%)</title><rect x="42.1109%" y="245" width="0.1276%" height="15" fill="rgb(240,163,11)"/><text x="42.3609%" y="255.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (33 samples, 0.23%)</title><rect x="42.2384%" y="261" width="0.2339%" height="15" fill="rgb(236,37,12)"/><text x="42.4884%" y="271.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (33 samples, 0.23%)</title><rect x="42.2384%" y="245" width="0.2339%" height="15" fill="rgb(232,164,16)"/><text x="42.4884%" y="255.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (17 samples, 0.12%)</title><rect x="42.4724%" y="261" width="0.1205%" height="15" fill="rgb(244,205,15)"/><text x="42.7224%" y="271.50"></text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (146 samples, 1.03%)</title><rect x="41.7777%" y="277" width="1.0349%" height="15" fill="rgb(223,117,47)"/><text x="42.0277%" y="287.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (31 samples, 0.22%)</title><rect x="42.5929%" y="261" width="0.2197%" height="15" fill="rgb(244,107,35)"/><text x="42.8429%" y="271.50"></text></g><g><title>__readdir64 (36 samples, 0.26%)</title><rect x="43.4363%" y="229" width="0.2552%" height="15" fill="rgb(205,140,8)"/><text x="43.6863%" y="239.50"></text></g><g><title>generator&lt;dirent&gt;::promise_type::yield_value (27 samples, 0.19%)</title><rect x="43.6986%" y="229" width="0.1914%" height="15" fill="rgb(228,84,46)"/><text x="43.9486%" y="239.50"></text></g><g><title>std::optional&lt;dirent&gt;::operator=&lt;dirent&gt; (27 samples, 0.19%)</title><rect x="43.6986%" y="213" width="0.1914%" height="15" fill="rgb(254,188,9)"/><text x="43.9486%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (17 samples, 0.12%)</title><rect x="43.9325%" y="213" width="0.1205%" height="15" fill="rgb(206,112,54)"/><text x="44.1825%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (15 samples, 0.11%)</title><rect x="43.9467%" y="197" width="0.1063%" height="15" fill="rgb(216,84,49)"/><text x="44.1967%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (15 samples, 0.11%)</title><rect x="43.9467%" y="181" width="0.1063%" height="15" fill="rgb(214,194,35)"/><text x="44.1967%" y="191.50"></text></g><g><title>__strlen_avx2 (19 samples, 0.13%)</title><rect x="44.1381%" y="165" width="0.1347%" height="15" fill="rgb(249,28,3)"/><text x="44.3881%" y="175.50"></text></g><g><title>is_special (55 samples, 0.39%)</title><rect x="43.8900%" y="229" width="0.3898%" height="15" fill="rgb(222,56,52)"/><text x="44.1400%" y="239.50"></text></g><g><title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (32 samples, 0.23%)</title><rect x="44.0530%" y="213" width="0.2268%" height="15" fill="rgb(245,217,50)"/><text x="44.3030%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (31 samples, 0.22%)</title><rect x="44.0601%" y="197" width="0.2197%" height="15" fill="rgb(213,201,24)"/><text x="44.3101%" y="207.50"></text></g><g><title>std::char_traits&lt;char&gt;::length (24 samples, 0.17%)</title><rect x="44.1097%" y="181" width="0.1701%" height="15" fill="rgb(248,116,28)"/><text x="44.3597%" y="191.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (208 samples, 1.47%)</title><rect x="42.8126%" y="245" width="1.4743%" height="15" fill="rgb(219,72,43)"/><text x="43.0626%" y="255.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (211 samples, 1.50%)</title><rect x="42.8126%" y="261" width="1.4956%" height="15" fill="rgb(209,138,14)"/><text x="43.0626%" y="271.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (23 samples, 0.16%)</title><rect x="44.3082%" y="261" width="0.1630%" height="15" fill="rgb(222,18,33)"/><text x="44.5582%" y="271.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (23 samples, 0.16%)</title><rect x="44.3082%" y="245" width="0.1630%" height="15" fill="rgb(213,199,7)"/><text x="44.5582%" y="255.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (23 samples, 0.16%)</title><rect x="44.3082%" y="229" width="0.1630%" height="15" fill="rgb(250,110,10)"/><text x="44.5582%" y="239.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (23 samples, 0.16%)</title><rect x="44.3082%" y="213" width="0.1630%" height="15" fill="rgb(248,123,6)"/><text x="44.5582%" y="223.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (20 samples, 0.14%)</title><rect x="44.5563%" y="261" width="0.1418%" height="15" fill="rgb(206,91,31)"/><text x="44.8063%" y="271.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (20 samples, 0.14%)</title><rect x="44.5563%" y="245" width="0.1418%" height="15" fill="rgb(211,154,13)"/><text x="44.8063%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (20 samples, 0.14%)</title><rect x="44.5563%" y="229" width="0.1418%" height="15" fill="rgb(225,148,7)"/><text x="44.8063%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (20 samples, 0.14%)</title><rect x="44.5563%" y="213" width="0.1418%" height="15" fill="rgb(220,160,43)"/><text x="44.8063%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (20 samples, 0.14%)</title><rect x="44.5563%" y="197" width="0.1418%" height="15" fill="rgb(213,52,39)"/><text x="44.8063%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (20 samples, 0.14%)</title><rect x="44.5563%" y="181" width="0.1418%" height="15" fill="rgb(243,137,7)"/><text x="44.8063%" y="191.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (20 samples, 0.14%)</title><rect x="44.5563%" y="165" width="0.1418%" height="15" fill="rgb(230,79,13)"/><text x="44.8063%" y="175.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (20 samples, 0.14%)</title><rect x="44.5563%" y="149" width="0.1418%" height="15" fill="rgb(247,105,23)"/><text x="44.8063%" y="159.50"></text></g><g><title>std::allocator&lt;char&gt;::allocate (20 samples, 0.14%)</title><rect x="44.5563%" y="133" width="0.1418%" height="15" fill="rgb(223,179,41)"/><text x="44.8063%" y="143.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (20 samples, 0.14%)</title><rect x="44.5563%" y="117" width="0.1418%" height="15" fill="rgb(218,9,34)"/><text x="44.8063%" y="127.50"></text></g><g><title>operator new (20 samples, 0.14%)</title><rect x="44.5563%" y="101" width="0.1418%" height="15" fill="rgb(222,106,8)"/><text x="44.8063%" y="111.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.12%)</title><rect x="44.5775%" y="85" width="0.1205%" height="15" fill="rgb(211,220,0)"/><text x="44.8275%" y="95.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (43 samples, 0.30%)</title><rect x="44.6980%" y="261" width="0.3048%" height="15" fill="rgb(229,52,16)"/><text x="44.9480%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (43 samples, 0.30%)</title><rect x="44.6980%" y="245" width="0.3048%" height="15" fill="rgb(212,155,18)"/><text x="44.9480%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (35 samples, 0.25%)</title><rect x="44.7547%" y="229" width="0.2481%" height="15" fill="rgb(242,21,14)"/><text x="45.0047%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (35 samples, 0.25%)</title><rect x="44.7547%" y="213" width="0.2481%" height="15" fill="rgb(222,19,48)"/><text x="45.0047%" y="223.50"></text></g><g><title>__GI___libc_free (16 samples, 0.11%)</title><rect x="45.0028%" y="149" width="0.1134%" height="15" fill="rgb(232,45,27)"/><text x="45.2528%" y="159.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (21 samples, 0.15%)</title><rect x="45.0028%" y="261" width="0.1489%" height="15" fill="rgb(249,103,42)"/><text x="45.2528%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (21 samples, 0.15%)</title><rect x="45.0028%" y="245" width="0.1489%" height="15" fill="rgb(246,81,33)"/><text x="45.2528%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (21 samples, 0.15%)</title><rect x="45.0028%" y="229" width="0.1489%" height="15" fill="rgb(252,33,42)"/><text x="45.2528%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (21 samples, 0.15%)</title><rect x="45.0028%" y="213" width="0.1489%" height="15" fill="rgb(209,212,41)"/><text x="45.2528%" y="223.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (21 samples, 0.15%)</title><rect x="45.0028%" y="197" width="0.1489%" height="15" fill="rgb(207,154,6)"/><text x="45.2528%" y="207.50"></text></g><g><title>std::allocator&lt;char&gt;::deallocate (21 samples, 0.15%)</title><rect x="45.0028%" y="181" width="0.1489%" height="15" fill="rgb(223,64,47)"/><text x="45.2528%" y="191.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (21 samples, 0.15%)</title><rect x="45.0028%" y="165" width="0.1489%" height="15" fill="rgb(211,161,38)"/><text x="45.2528%" y="175.50"></text></g><g><title>directory_entries_with_paths (358 samples, 2.54%)</title><rect x="42.8126%" y="277" width="2.5376%" height="15" fill="rgb(219,138,40)"/><text x="43.0626%" y="287.50">di..</text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (28 samples, 0.20%)</title><rect x="45.1517%" y="261" width="0.1985%" height="15" fill="rgb(241,228,46)"/><text x="45.4017%" y="271.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (510 samples, 3.61%)</title><rect x="41.7777%" y="293" width="3.6150%" height="15" fill="rgb(223,209,38)"/><text x="42.0277%" y="303.50">gene..</text></g><g><title>operator new (21 samples, 0.15%)</title><rect x="45.5415%" y="229" width="0.1489%" height="15" fill="rgb(236,164,45)"/><text x="45.7915%" y="239.50"></text></g><g><title>__GI___libc_malloc (21 samples, 0.15%)</title><rect x="45.5415%" y="213" width="0.1489%" height="15" fill="rgb(231,15,5)"/><text x="45.7915%" y="223.50"></text></g><g><title>_int_malloc (20 samples, 0.14%)</title><rect x="45.5486%" y="197" width="0.1418%" height="15" fill="rgb(252,35,15)"/><text x="45.7986%" y="207.50"></text></g><g><title>directory_entries_with_paths (22 samples, 0.16%)</title><rect x="45.5415%" y="245" width="0.1559%" height="15" fill="rgb(248,181,18)"/><text x="45.7915%" y="255.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (18 samples, 0.13%)</title><rect x="45.7967%" y="181" width="0.1276%" height="15" fill="rgb(233,39,42)"/><text x="46.0467%" y="191.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (18 samples, 0.13%)</title><rect x="45.7967%" y="165" width="0.1276%" height="15" fill="rgb(238,110,33)"/><text x="46.0467%" y="175.50"></text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (57 samples, 0.40%)</title><rect x="45.6975%" y="197" width="0.4040%" height="15" fill="rgb(233,195,10)"/><text x="45.9475%" y="207.50"></text></g><g><title>__opendir (18 samples, 0.13%)</title><rect x="46.3638%" y="117" width="0.1276%" height="15" fill="rgb(254,105,3)"/><text x="46.6138%" y="127.50"></text></g><g><title>__GI___open64_nocancel (18 samples, 0.13%)</title><rect x="46.3638%" y="101" width="0.1276%" height="15" fill="rgb(221,225,9)"/><text x="46.6138%" y="111.50"></text></g><g><title>__readdir64 (23 samples, 0.16%)</title><rect x="46.4914%" y="117" width="0.1630%" height="15" fill="rgb(224,227,45)"/><text x="46.7414%" y="127.50"></text></g><g><title>__GI___getdents64 (15 samples, 0.11%)</title><rect x="46.5481%" y="101" width="0.1063%" height="15" fill="rgb(229,198,43)"/><text x="46.7981%" y="111.50"></text></g><g><title>is_special (31 samples, 0.22%)</title><rect x="46.7040%" y="117" width="0.2197%" height="15" fill="rgb(206,209,35)"/><text x="46.9540%" y="127.50"></text></g><g><title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (15 samples, 0.11%)</title><rect x="46.8174%" y="101" width="0.1063%" height="15" fill="rgb(245,195,53)"/><text x="47.0674%" y="111.50"></text></g><g><title>__alloc_dir (40 samples, 0.28%)</title><rect x="46.9450%" y="101" width="0.2835%" height="15" fill="rgb(240,92,26)"/><text x="47.1950%" y="111.50"></text></g><g><title>__GI___libc_malloc (40 samples, 0.28%)</title><rect x="46.9450%" y="85" width="0.2835%" height="15" fill="rgb(207,40,23)"/><text x="47.1950%" y="95.50"></text></g><g><title>_int_malloc (37 samples, 0.26%)</title><rect x="46.9663%" y="69" width="0.2623%" height="15" fill="rgb(223,111,35)"/><text x="47.2163%" y="79.50"></text></g><g><title>opendir_tail (52 samples, 0.37%)</title><rect x="46.9237%" y="117" width="0.3686%" height="15" fill="rgb(229,147,28)"/><text x="47.1737%" y="127.50"></text></g><g><title>generator&lt;dirent&gt;::begin (162 samples, 1.15%)</title><rect x="46.1511%" y="181" width="1.1483%" height="15" fill="rgb(211,29,28)"/><text x="46.4011%" y="191.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::iterator (162 samples, 1.15%)</title><rect x="46.1511%" y="165" width="1.1483%" height="15" fill="rgb(228,72,33)"/><text x="46.4011%" y="175.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (162 samples, 1.15%)</title><rect x="46.1511%" y="149" width="1.1483%" height="15" fill="rgb(205,214,31)"/><text x="46.4011%" y="159.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (162 samples, 1.15%)</title><rect x="46.1511%" y="133" width="1.1483%" height="15" fill="rgb(224,111,15)"/><text x="46.4011%" y="143.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (19 samples, 0.13%)</title><rect x="47.4199%" y="181" width="0.1347%" height="15" fill="rgb(253,21,26)"/><text x="47.6699%" y="191.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (19 samples, 0.13%)</title><rect x="47.4199%" y="165" width="0.1347%" height="15" fill="rgb(245,139,43)"/><text x="47.6699%" y="175.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (18 samples, 0.13%)</title><rect x="47.4270%" y="149" width="0.1276%" height="15" fill="rgb(252,170,7)"/><text x="47.6770%" y="159.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (18 samples, 0.13%)</title><rect x="47.4270%" y="133" width="0.1276%" height="15" fill="rgb(231,118,14)"/><text x="47.6770%" y="143.50"></text></g><g><title>directory_entries_with_paths (211 samples, 1.50%)</title><rect x="46.1015%" y="197" width="1.4956%" height="15" fill="rgb(238,83,0)"/><text x="46.3515%" y="207.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::begin (273 samples, 1.94%)</title><rect x="45.6975%" y="245" width="1.9351%" height="15" fill="rgb(221,39,39)"/><text x="45.9475%" y="255.50">g..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::iterator (273 samples, 1.94%)</title><rect x="45.6975%" y="229" width="1.9351%" height="15" fill="rgb(222,119,46)"/><text x="45.9475%" y="239.50">g..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (273 samples, 1.94%)</title><rect x="45.6975%" y="213" width="1.9351%" height="15" fill="rgb(222,165,49)"/><text x="45.9475%" y="223.50">g..</text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (328 samples, 2.32%)</title><rect x="45.4210%" y="261" width="2.3249%" height="15" fill="rgb(219,113,52)"/><text x="45.6710%" y="271.50">_..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (329 samples, 2.33%)</title><rect x="45.4210%" y="277" width="2.3320%" height="15" fill="rgb(214,7,15)"/><text x="45.6710%" y="287.50">g..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (371 samples, 2.63%)</title><rect x="45.3927%" y="293" width="2.6297%" height="15" fill="rgb(235,32,4)"/><text x="45.6427%" y="303.50">ge..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (37 samples, 0.26%)</title><rect x="47.7601%" y="277" width="0.2623%" height="15" fill="rgb(238,90,54)"/><text x="48.0101%" y="287.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (36 samples, 0.26%)</title><rect x="47.7672%" y="261" width="0.2552%" height="15" fill="rgb(213,208,19)"/><text x="48.0172%" y="271.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (36 samples, 0.26%)</title><rect x="47.7672%" y="245" width="0.2552%" height="15" fill="rgb(233,156,4)"/><text x="48.0172%" y="255.50"></text></g><g><title>operator new (34 samples, 0.24%)</title><rect x="48.1075%" y="277" width="0.2410%" height="15" fill="rgb(207,194,5)"/><text x="48.3575%" y="287.50"></text></g><g><title>__GI___libc_malloc (34 samples, 0.24%)</title><rect x="48.1075%" y="261" width="0.2410%" height="15" fill="rgb(206,111,30)"/><text x="48.3575%" y="271.50"></text></g><g><title>_int_malloc (31 samples, 0.22%)</title><rect x="48.1287%" y="245" width="0.2197%" height="15" fill="rgb(243,70,54)"/><text x="48.3787%" y="255.50"></text></g><g><title>recursive_directory_entries (37 samples, 0.26%)</title><rect x="48.0933%" y="293" width="0.2623%" height="15" fill="rgb(242,28,8)"/><text x="48.3433%" y="303.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (1,029 samples, 7.29%)</title><rect x="41.0831%" y="309" width="7.2937%" height="15" fill="rgb(219,106,18)"/><text x="41.3331%" y="319.50">_Z27recurs..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::is_resumable (47 samples, 0.33%)</title><rect x="48.4264%" y="309" width="0.3331%" height="15" fill="rgb(244,222,10)"/><text x="48.6764%" y="319.50"></text></g><g><title>std::__n4861::coroutine_handle&lt;generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type&gt;::operator bool (15 samples, 0.11%)</title><rect x="48.6532%" y="293" width="0.1063%" height="15" fill="rgb(236,179,52)"/><text x="48.9032%" y="303.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (15 samples, 0.11%)</title><rect x="49.6527%" y="245" width="0.1063%" height="15" fill="rgb(213,23,39)"/><text x="49.9027%" y="255.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (17 samples, 0.12%)</title><rect x="49.8582%" y="245" width="0.1205%" height="15" fill="rgb(238,48,10)"/><text x="50.1082%" y="255.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (17 samples, 0.12%)</title><rect x="49.8582%" y="229" width="0.1205%" height="15" fill="rgb(251,196,23)"/><text x="50.1082%" y="239.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (17 samples, 0.12%)</title><rect x="49.8582%" y="213" width="0.1205%" height="15" fill="rgb(250,152,24)"/><text x="50.1082%" y="223.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (17 samples, 0.12%)</title><rect x="49.8582%" y="197" width="0.1205%" height="15" fill="rgb(209,150,17)"/><text x="50.1082%" y="207.50"></text></g><g><title>__GI___libc_free (21 samples, 0.15%)</title><rect x="50.0000%" y="149" width="0.1489%" height="15" fill="rgb(234,202,34)"/><text x="50.2500%" y="159.50"></text></g><g><title>_int_free (17 samples, 0.12%)</title><rect x="50.0284%" y="133" width="0.1205%" height="15" fill="rgb(253,148,53)"/><text x="50.2784%" y="143.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (23 samples, 0.16%)</title><rect x="49.9929%" y="213" width="0.1630%" height="15" fill="rgb(218,129,16)"/><text x="50.2429%" y="223.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (22 samples, 0.16%)</title><rect x="50.0000%" y="197" width="0.1559%" height="15" fill="rgb(216,85,19)"/><text x="50.2500%" y="207.50"></text></g><g><title>std::allocator&lt;char&gt;::deallocate (22 samples, 0.16%)</title><rect x="50.0000%" y="181" width="0.1559%" height="15" fill="rgb(235,228,7)"/><text x="50.2500%" y="191.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (22 samples, 0.16%)</title><rect x="50.0000%" y="165" width="0.1559%" height="15" fill="rgb(245,175,0)"/><text x="50.2500%" y="175.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (26 samples, 0.18%)</title><rect x="49.9787%" y="245" width="0.1843%" height="15" fill="rgb(208,168,36)"/><text x="50.2287%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (26 samples, 0.18%)</title><rect x="49.9787%" y="229" width="0.1843%" height="15" fill="rgb(246,171,24)"/><text x="50.2287%" y="239.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (35 samples, 0.25%)</title><rect x="50.1630%" y="245" width="0.2481%" height="15" fill="rgb(215,142,24)"/><text x="50.4130%" y="255.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (35 samples, 0.25%)</title><rect x="50.1630%" y="229" width="0.2481%" height="15" fill="rgb(250,187,7)"/><text x="50.4130%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (24 samples, 0.17%)</title><rect x="50.4111%" y="229" width="0.1701%" height="15" fill="rgb(228,66,33)"/><text x="50.6611%" y="239.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (30 samples, 0.21%)</title><rect x="50.4111%" y="245" width="0.2126%" height="15" fill="rgb(234,215,21)"/><text x="50.6611%" y="255.50"></text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (186 samples, 1.32%)</title><rect x="49.5180%" y="261" width="1.3184%" height="15" fill="rgb(222,191,20)"/><text x="49.7680%" y="271.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (30 samples, 0.21%)</title><rect x="50.6238%" y="245" width="0.2126%" height="15" fill="rgb(245,79,54)"/><text x="50.8738%" y="255.50"></text></g><g><title>__closedir (21 samples, 0.15%)</title><rect x="51.3326%" y="213" width="0.1489%" height="15" fill="rgb(240,10,37)"/><text x="51.5826%" y="223.50"></text></g><g><title>__GI___libc_free (20 samples, 0.14%)</title><rect x="51.3397%" y="197" width="0.1418%" height="15" fill="rgb(214,192,32)"/><text x="51.5897%" y="207.50"></text></g><g><title>_int_free (19 samples, 0.13%)</title><rect x="51.3468%" y="181" width="0.1347%" height="15" fill="rgb(209,36,54)"/><text x="51.5968%" y="191.50"></text></g><g><title>__readdir64 (39 samples, 0.28%)</title><rect x="51.4814%" y="213" width="0.2764%" height="15" fill="rgb(220,10,11)"/><text x="51.7314%" y="223.50"></text></g><g><title>generator&lt;dirent&gt;::promise_type::yield_value (28 samples, 0.20%)</title><rect x="51.7579%" y="213" width="0.1985%" height="15" fill="rgb(221,106,17)"/><text x="52.0079%" y="223.50"></text></g><g><title>std::optional&lt;dirent&gt;::operator=&lt;dirent&gt; (28 samples, 0.20%)</title><rect x="51.7579%" y="197" width="0.1985%" height="15" fill="rgb(251,142,44)"/><text x="52.0079%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (19 samples, 0.13%)</title><rect x="51.9847%" y="197" width="0.1347%" height="15" fill="rgb(238,13,15)"/><text x="52.2347%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (16 samples, 0.11%)</title><rect x="52.0060%" y="181" width="0.1134%" height="15" fill="rgb(208,107,27)"/><text x="52.2560%" y="191.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (16 samples, 0.11%)</title><rect x="52.0060%" y="165" width="0.1134%" height="15" fill="rgb(205,136,37)"/><text x="52.2560%" y="175.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (15 samples, 0.11%)</title><rect x="52.0130%" y="149" width="0.1063%" height="15" fill="rgb(250,205,27)"/><text x="52.2630%" y="159.50"></text></g><g><title>std::char_traits&lt;char&gt;::compare (16 samples, 0.11%)</title><rect x="52.1690%" y="165" width="0.1134%" height="15" fill="rgb(210,80,43)"/><text x="52.4190%" y="175.50"></text></g><g><title>__strlen_avx2 (17 samples, 0.12%)</title><rect x="52.2824%" y="149" width="0.1205%" height="15" fill="rgb(247,160,36)"/><text x="52.5324%" y="159.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (223 samples, 1.58%)</title><rect x="50.8364%" y="229" width="1.5807%" height="15" fill="rgb(234,13,49)"/><text x="51.0864%" y="239.50"></text></g><g><title>is_special (65 samples, 0.46%)</title><rect x="51.9563%" y="213" width="0.4607%" height="15" fill="rgb(234,122,0)"/><text x="52.2063%" y="223.50"></text></g><g><title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (38 samples, 0.27%)</title><rect x="52.1477%" y="197" width="0.2694%" height="15" fill="rgb(207,146,38)"/><text x="52.3977%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (38 samples, 0.27%)</title><rect x="52.1477%" y="181" width="0.2694%" height="15" fill="rgb(207,177,25)"/><text x="52.3977%" y="191.50"></text></g><g><title>std::char_traits&lt;char&gt;::length (19 samples, 0.13%)</title><rect x="52.2824%" y="165" width="0.1347%" height="15" fill="rgb(211,178,42)"/><text x="52.5324%" y="175.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (229 samples, 1.62%)</title><rect x="50.8364%" y="245" width="1.6232%" height="15" fill="rgb(230,69,54)"/><text x="51.0864%" y="255.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (21 samples, 0.15%)</title><rect x="52.4596%" y="245" width="0.1489%" height="15" fill="rgb(214,135,41)"/><text x="52.7096%" y="255.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (21 samples, 0.15%)</title><rect x="52.4596%" y="229" width="0.1489%" height="15" fill="rgb(237,67,25)"/><text x="52.7096%" y="239.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (21 samples, 0.15%)</title><rect x="52.4596%" y="213" width="0.1489%" height="15" fill="rgb(222,189,50)"/><text x="52.7096%" y="223.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (21 samples, 0.15%)</title><rect x="52.4596%" y="197" width="0.1489%" height="15" fill="rgb(245,148,34)"/><text x="52.7096%" y="207.50"></text></g><g><title>operator new (20 samples, 0.14%)</title><rect x="52.7077%" y="85" width="0.1418%" height="15" fill="rgb(222,29,6)"/><text x="52.9577%" y="95.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.12%)</title><rect x="52.7289%" y="69" width="0.1205%" height="15" fill="rgb(221,189,43)"/><text x="52.9789%" y="79.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (22 samples, 0.16%)</title><rect x="52.7077%" y="245" width="0.1559%" height="15" fill="rgb(207,36,27)"/><text x="52.9577%" y="255.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (22 samples, 0.16%)</title><rect x="52.7077%" y="229" width="0.1559%" height="15" fill="rgb(217,90,24)"/><text x="52.9577%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (22 samples, 0.16%)</title><rect x="52.7077%" y="213" width="0.1559%" height="15" fill="rgb(224,66,35)"/><text x="52.9577%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (22 samples, 0.16%)</title><rect x="52.7077%" y="197" width="0.1559%" height="15" fill="rgb(221,13,50)"/><text x="52.9577%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (22 samples, 0.16%)</title><rect x="52.7077%" y="181" width="0.1559%" height="15" fill="rgb(236,68,49)"/><text x="52.9577%" y="191.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (22 samples, 0.16%)</title><rect x="52.7077%" y="165" width="0.1559%" height="15" fill="rgb(229,146,28)"/><text x="52.9577%" y="175.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (22 samples, 0.16%)</title><rect x="52.7077%" y="149" width="0.1559%" height="15" fill="rgb(225,31,38)"/><text x="52.9577%" y="159.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (22 samples, 0.16%)</title><rect x="52.7077%" y="133" width="0.1559%" height="15" fill="rgb(250,208,3)"/><text x="52.9577%" y="143.50"></text></g><g><title>std::allocator&lt;char&gt;::allocate (22 samples, 0.16%)</title><rect x="52.7077%" y="117" width="0.1559%" height="15" fill="rgb(246,54,23)"/><text x="52.9577%" y="127.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (22 samples, 0.16%)</title><rect x="52.7077%" y="101" width="0.1559%" height="15" fill="rgb(243,76,11)"/><text x="52.9577%" y="111.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (46 samples, 0.33%)</title><rect x="52.8636%" y="245" width="0.3261%" height="15" fill="rgb(245,21,50)"/><text x="53.1136%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (46 samples, 0.33%)</title><rect x="52.8636%" y="229" width="0.3261%" height="15" fill="rgb(228,9,43)"/><text x="53.1136%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (37 samples, 0.26%)</title><rect x="52.9274%" y="213" width="0.2623%" height="15" fill="rgb(208,100,47)"/><text x="53.1774%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (37 samples, 0.26%)</title><rect x="52.9274%" y="197" width="0.2623%" height="15" fill="rgb(232,26,8)"/><text x="53.1774%" y="207.50"></text></g><g><title>__GI___libc_free (27 samples, 0.19%)</title><rect x="53.1897%" y="133" width="0.1914%" height="15" fill="rgb(216,166,38)"/><text x="53.4397%" y="143.50"></text></g><g><title>_int_free (17 samples, 0.12%)</title><rect x="53.2606%" y="117" width="0.1205%" height="15" fill="rgb(251,202,51)"/><text x="53.5106%" y="127.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (29 samples, 0.21%)</title><rect x="53.1897%" y="245" width="0.2056%" height="15" fill="rgb(254,216,34)"/><text x="53.4397%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (29 samples, 0.21%)</title><rect x="53.1897%" y="229" width="0.2056%" height="15" fill="rgb(251,32,27)"/><text x="53.4397%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (29 samples, 0.21%)</title><rect x="53.1897%" y="213" width="0.2056%" height="15" fill="rgb(208,127,28)"/><text x="53.4397%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (29 samples, 0.21%)</title><rect x="53.1897%" y="197" width="0.2056%" height="15" fill="rgb(224,137,22)"/><text x="53.4397%" y="207.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (29 samples, 0.21%)</title><rect x="53.1897%" y="181" width="0.2056%" height="15" fill="rgb(254,70,32)"/><text x="53.4397%" y="191.50"></text></g><g><title>std::allocator&lt;char&gt;::deallocate (29 samples, 0.21%)</title><rect x="53.1897%" y="165" width="0.2056%" height="15" fill="rgb(229,75,37)"/><text x="53.4397%" y="175.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (29 samples, 0.21%)</title><rect x="53.1897%" y="149" width="0.2056%" height="15" fill="rgb(252,64,23)"/><text x="53.4397%" y="159.50"></text></g><g><title>directory_entries_with_paths (391 samples, 2.77%)</title><rect x="50.8364%" y="261" width="2.7715%" height="15" fill="rgb(232,162,48)"/><text x="51.0864%" y="271.50">di..</text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (30 samples, 0.21%)</title><rect x="53.3952%" y="245" width="0.2126%" height="15" fill="rgb(246,160,12)"/><text x="53.6452%" y="255.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (593 samples, 4.20%)</title><rect x="49.4967%" y="277" width="4.2033%" height="15" fill="rgb(247,166,0)"/><text x="49.7467%" y="287.50">gener..</text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (30 samples, 0.21%)</title><rect x="53.8985%" y="181" width="0.2126%" height="15" fill="rgb(249,219,21)"/><text x="54.1485%" y="191.50"></text></g><g><title>__alloc_dir (17 samples, 0.12%)</title><rect x="54.3663%" y="85" width="0.1205%" height="15" fill="rgb(205,209,3)"/><text x="54.6163%" y="95.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.11%)</title><rect x="54.3805%" y="69" width="0.1063%" height="15" fill="rgb(243,44,1)"/><text x="54.6305%" y="79.50"></text></g><g><title>generator&lt;dirent&gt;::begin (56 samples, 0.40%)</title><rect x="54.1182%" y="165" width="0.3969%" height="15" fill="rgb(206,159,16)"/><text x="54.3682%" y="175.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::iterator (56 samples, 0.40%)</title><rect x="54.1182%" y="149" width="0.3969%" height="15" fill="rgb(244,77,30)"/><text x="54.3682%" y="159.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (56 samples, 0.40%)</title><rect x="54.1182%" y="133" width="0.3969%" height="15" fill="rgb(218,69,12)"/><text x="54.3682%" y="143.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (56 samples, 0.40%)</title><rect x="54.1182%" y="117" width="0.3969%" height="15" fill="rgb(212,87,7)"/><text x="54.3682%" y="127.50"></text></g><g><title>opendir_tail (23 samples, 0.16%)</title><rect x="54.3521%" y="101" width="0.1630%" height="15" fill="rgb(245,114,25)"/><text x="54.6021%" y="111.50"></text></g><g><title>directory_entries_with_paths (86 samples, 0.61%)</title><rect x="54.1111%" y="181" width="0.6096%" height="15" fill="rgb(210,61,42)"/><text x="54.3611%" y="191.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::begin (118 samples, 0.84%)</title><rect x="53.8985%" y="229" width="0.8364%" height="15" fill="rgb(211,52,33)"/><text x="54.1485%" y="239.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::iterator (118 samples, 0.84%)</title><rect x="53.8985%" y="213" width="0.8364%" height="15" fill="rgb(234,58,33)"/><text x="54.1485%" y="223.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (118 samples, 0.84%)</title><rect x="53.8985%" y="197" width="0.8364%" height="15" fill="rgb(220,115,36)"/><text x="54.1485%" y="207.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (146 samples, 1.03%)</title><rect x="53.7284%" y="261" width="1.0349%" height="15" fill="rgb(243,153,54)"/><text x="53.9784%" y="271.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (146 samples, 1.03%)</title><rect x="53.7284%" y="245" width="1.0349%" height="15" fill="rgb(251,47,18)"/><text x="53.9784%" y="255.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (190 samples, 1.35%)</title><rect x="53.7000%" y="277" width="1.3468%" height="15" fill="rgb(242,102,42)"/><text x="53.9500%" y="287.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (39 samples, 0.28%)</title><rect x="54.7703%" y="261" width="0.2764%" height="15" fill="rgb(234,31,38)"/><text x="55.0203%" y="271.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (39 samples, 0.28%)</title><rect x="54.7703%" y="245" width="0.2764%" height="15" fill="rgb(221,117,51)"/><text x="55.0203%" y="255.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (39 samples, 0.28%)</title><rect x="54.7703%" y="229" width="0.2764%" height="15" fill="rgb(212,20,18)"/><text x="55.0203%" y="239.50"></text></g><g><title>operator new (21 samples, 0.15%)</title><rect x="55.1389%" y="261" width="0.1489%" height="15" fill="rgb(245,133,36)"/><text x="55.3889%" y="271.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.14%)</title><rect x="55.1460%" y="245" width="0.1418%" height="15" fill="rgb(212,6,19)"/><text x="55.3960%" y="255.50"></text></g><g><title>_int_malloc (19 samples, 0.13%)</title><rect x="55.1531%" y="229" width="0.1347%" height="15" fill="rgb(218,1,36)"/><text x="55.4031%" y="239.50"></text></g><g><title>recursive_directory_entries (22 samples, 0.16%)</title><rect x="55.1389%" y="277" width="0.1559%" height="15" fill="rgb(246,84,54)"/><text x="55.3889%" y="287.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (915 samples, 6.49%)</title><rect x="48.8163%" y="293" width="6.4857%" height="15" fill="rgb(242,110,6)"/><text x="49.0663%" y="303.50">_Z27recu..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::is_resumable (32 samples, 0.23%)</title><rect x="55.3445%" y="293" width="0.2268%" height="15" fill="rgb(214,47,5)"/><text x="55.5945%" y="303.50"></text></g><g><title>__GI___libc_free (16 samples, 0.11%)</title><rect x="56.3227%" y="133" width="0.1134%" height="15" fill="rgb(218,159,25)"/><text x="56.5727%" y="143.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (19 samples, 0.13%)</title><rect x="56.3085%" y="197" width="0.1347%" height="15" fill="rgb(215,211,28)"/><text x="56.5585%" y="207.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (17 samples, 0.12%)</title><rect x="56.3227%" y="181" width="0.1205%" height="15" fill="rgb(238,59,32)"/><text x="56.5727%" y="191.50"></text></g><g><title>std::allocator&lt;char&gt;::deallocate (17 samples, 0.12%)</title><rect x="56.3227%" y="165" width="0.1205%" height="15" fill="rgb(226,82,3)"/><text x="56.5727%" y="175.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (17 samples, 0.12%)</title><rect x="56.3227%" y="149" width="0.1205%" height="15" fill="rgb(240,164,32)"/><text x="56.5727%" y="159.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (21 samples, 0.15%)</title><rect x="56.3085%" y="229" width="0.1489%" height="15" fill="rgb(232,46,7)"/><text x="56.5585%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (21 samples, 0.15%)</title><rect x="56.3085%" y="213" width="0.1489%" height="15" fill="rgb(229,129,53)"/><text x="56.5585%" y="223.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (24 samples, 0.17%)</title><rect x="56.4573%" y="229" width="0.1701%" height="15" fill="rgb(234,188,29)"/><text x="56.7073%" y="239.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (24 samples, 0.17%)</title><rect x="56.4573%" y="213" width="0.1701%" height="15" fill="rgb(246,141,4)"/><text x="56.7073%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (19 samples, 0.13%)</title><rect x="56.6274%" y="213" width="0.1347%" height="15" fill="rgb(229,23,39)"/><text x="56.8774%" y="223.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (25 samples, 0.18%)</title><rect x="56.6274%" y="229" width="0.1772%" height="15" fill="rgb(206,12,3)"/><text x="56.8774%" y="239.50"></text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (121 samples, 0.86%)</title><rect x="56.0746%" y="245" width="0.8577%" height="15" fill="rgb(252,226,20)"/><text x="56.3246%" y="255.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (18 samples, 0.13%)</title><rect x="56.8046%" y="229" width="0.1276%" height="15" fill="rgb(216,123,35)"/><text x="57.0546%" y="239.50"></text></g><g><title>__readdir64 (19 samples, 0.13%)</title><rect x="57.2796%" y="197" width="0.1347%" height="15" fill="rgb(212,68,40)"/><text x="57.5296%" y="207.50"></text></g><g><title>generator&lt;dirent&gt;::promise_type::yield_value (25 samples, 0.18%)</title><rect x="57.4142%" y="197" width="0.1772%" height="15" fill="rgb(254,125,32)"/><text x="57.6642%" y="207.50"></text></g><g><title>std::optional&lt;dirent&gt;::operator=&lt;dirent&gt; (25 samples, 0.18%)</title><rect x="57.4142%" y="181" width="0.1772%" height="15" fill="rgb(253,97,22)"/><text x="57.6642%" y="191.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (22 samples, 0.16%)</title><rect x="57.6056%" y="181" width="0.1559%" height="15" fill="rgb(241,101,14)"/><text x="57.8556%" y="191.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (19 samples, 0.13%)</title><rect x="57.6269%" y="165" width="0.1347%" height="15" fill="rgb(238,103,29)"/><text x="57.8769%" y="175.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (19 samples, 0.13%)</title><rect x="57.6269%" y="149" width="0.1347%" height="15" fill="rgb(233,195,47)"/><text x="57.8769%" y="159.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (18 samples, 0.13%)</title><rect x="57.6340%" y="133" width="0.1276%" height="15" fill="rgb(246,218,30)"/><text x="57.8840%" y="143.50"></text></g><g><title>is_special (50 samples, 0.35%)</title><rect x="57.5914%" y="197" width="0.3544%" height="15" fill="rgb(219,145,47)"/><text x="57.8414%" y="207.50"></text></g><g><title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (25 samples, 0.18%)</title><rect x="57.7686%" y="181" width="0.1772%" height="15" fill="rgb(243,12,26)"/><text x="58.0186%" y="191.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (23 samples, 0.16%)</title><rect x="57.7828%" y="165" width="0.1630%" height="15" fill="rgb(214,87,16)"/><text x="58.0328%" y="175.50"></text></g><g><title>std::char_traits&lt;char&gt;::length (17 samples, 0.12%)</title><rect x="57.8253%" y="149" width="0.1205%" height="15" fill="rgb(208,99,42)"/><text x="58.0753%" y="159.50"></text></g><g><title>__strlen_avx2 (15 samples, 0.11%)</title><rect x="57.8395%" y="133" width="0.1063%" height="15" fill="rgb(253,99,2)"/><text x="58.0895%" y="143.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (144 samples, 1.02%)</title><rect x="56.9322%" y="213" width="1.0207%" height="15" fill="rgb(220,168,23)"/><text x="57.1822%" y="223.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (148 samples, 1.05%)</title><rect x="56.9322%" y="229" width="1.0491%" height="15" fill="rgb(242,38,24)"/><text x="57.1822%" y="239.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (19 samples, 0.13%)</title><rect x="57.9813%" y="229" width="0.1347%" height="15" fill="rgb(225,182,9)"/><text x="58.2313%" y="239.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (19 samples, 0.13%)</title><rect x="57.9813%" y="213" width="0.1347%" height="15" fill="rgb(243,178,37)"/><text x="58.2313%" y="223.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (19 samples, 0.13%)</title><rect x="57.9813%" y="197" width="0.1347%" height="15" fill="rgb(232,139,19)"/><text x="58.2313%" y="207.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (19 samples, 0.13%)</title><rect x="57.9813%" y="181" width="0.1347%" height="15" fill="rgb(225,201,24)"/><text x="58.2313%" y="191.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (15 samples, 0.11%)</title><rect x="58.3995%" y="165" width="0.1063%" height="15" fill="rgb(221,47,46)"/><text x="58.6495%" y="175.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (15 samples, 0.11%)</title><rect x="58.3995%" y="149" width="0.1063%" height="15" fill="rgb(249,23,13)"/><text x="58.6495%" y="159.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (15 samples, 0.11%)</title><rect x="58.3995%" y="133" width="0.1063%" height="15" fill="rgb(219,9,5)"/><text x="58.6495%" y="143.50"></text></g><g><title>std::allocator&lt;char&gt;::deallocate (15 samples, 0.11%)</title><rect x="58.3995%" y="117" width="0.1063%" height="15" fill="rgb(254,171,16)"/><text x="58.6495%" y="127.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (15 samples, 0.11%)</title><rect x="58.3995%" y="101" width="0.1063%" height="15" fill="rgb(230,171,20)"/><text x="58.6495%" y="111.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (33 samples, 0.23%)</title><rect x="58.3003%" y="229" width="0.2339%" height="15" fill="rgb(210,71,41)"/><text x="58.5503%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (33 samples, 0.23%)</title><rect x="58.3003%" y="213" width="0.2339%" height="15" fill="rgb(206,173,20)"/><text x="58.5503%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (29 samples, 0.21%)</title><rect x="58.3286%" y="197" width="0.2056%" height="15" fill="rgb(233,88,34)"/><text x="58.5786%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (29 samples, 0.21%)</title><rect x="58.3286%" y="181" width="0.2056%" height="15" fill="rgb(223,209,46)"/><text x="58.5786%" y="191.50"></text></g><g><title>__GI___libc_free (20 samples, 0.14%)</title><rect x="58.5342%" y="117" width="0.1418%" height="15" fill="rgb(250,43,18)"/><text x="58.7842%" y="127.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (22 samples, 0.16%)</title><rect x="58.5342%" y="229" width="0.1559%" height="15" fill="rgb(208,13,10)"/><text x="58.7842%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (22 samples, 0.16%)</title><rect x="58.5342%" y="213" width="0.1559%" height="15" fill="rgb(212,200,36)"/><text x="58.7842%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (22 samples, 0.16%)</title><rect x="58.5342%" y="197" width="0.1559%" height="15" fill="rgb(225,90,30)"/><text x="58.7842%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (22 samples, 0.16%)</title><rect x="58.5342%" y="181" width="0.1559%" height="15" fill="rgb(236,182,39)"/><text x="58.7842%" y="191.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (22 samples, 0.16%)</title><rect x="58.5342%" y="165" width="0.1559%" height="15" fill="rgb(212,144,35)"/><text x="58.7842%" y="175.50"></text></g><g><title>std::allocator&lt;char&gt;::deallocate (22 samples, 0.16%)</title><rect x="58.5342%" y="149" width="0.1559%" height="15" fill="rgb(228,63,44)"/><text x="58.7842%" y="159.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (22 samples, 0.16%)</title><rect x="58.5342%" y="133" width="0.1559%" height="15" fill="rgb(228,109,6)"/><text x="58.7842%" y="143.50"></text></g><g><title>directory_entries_with_paths (267 samples, 1.89%)</title><rect x="56.9322%" y="245" width="1.8925%" height="15" fill="rgb(238,117,24)"/><text x="57.1822%" y="255.50">d..</text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (19 samples, 0.13%)</title><rect x="58.6901%" y="229" width="0.1347%" height="15" fill="rgb(242,26,26)"/><text x="58.9401%" y="239.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (394 samples, 2.79%)</title><rect x="56.0675%" y="261" width="2.7927%" height="15" fill="rgb(221,92,48)"/><text x="56.3175%" y="271.50">ge..</text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (16 samples, 0.11%)</title><rect x="58.9595%" y="165" width="0.1134%" height="15" fill="rgb(209,209,32)"/><text x="59.2095%" y="175.50"></text></g><g><title>generator&lt;dirent&gt;::begin (32 samples, 0.23%)</title><rect x="59.0800%" y="149" width="0.2268%" height="15" fill="rgb(221,70,22)"/><text x="59.3300%" y="159.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::iterator (32 samples, 0.23%)</title><rect x="59.0800%" y="133" width="0.2268%" height="15" fill="rgb(248,145,5)"/><text x="59.3300%" y="143.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (32 samples, 0.23%)</title><rect x="59.0800%" y="117" width="0.2268%" height="15" fill="rgb(226,116,26)"/><text x="59.3300%" y="127.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (32 samples, 0.23%)</title><rect x="59.0800%" y="101" width="0.2268%" height="15" fill="rgb(244,5,17)"/><text x="59.3300%" y="111.50"></text></g><g><title>directory_entries_with_paths (43 samples, 0.30%)</title><rect x="59.0729%" y="165" width="0.3048%" height="15" fill="rgb(252,159,33)"/><text x="59.3229%" y="175.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::begin (60 samples, 0.43%)</title><rect x="58.9595%" y="213" width="0.4253%" height="15" fill="rgb(206,71,0)"/><text x="59.2095%" y="223.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::iterator (60 samples, 0.43%)</title><rect x="58.9595%" y="197" width="0.4253%" height="15" fill="rgb(233,118,54)"/><text x="59.2095%" y="207.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (60 samples, 0.43%)</title><rect x="58.9595%" y="181" width="0.4253%" height="15" fill="rgb(234,83,48)"/><text x="59.2095%" y="191.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (75 samples, 0.53%)</title><rect x="58.8673%" y="245" width="0.5316%" height="15" fill="rgb(228,3,54)"/><text x="59.1173%" y="255.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (75 samples, 0.53%)</title><rect x="58.8673%" y="229" width="0.5316%" height="15" fill="rgb(226,155,13)"/><text x="59.1173%" y="239.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (106 samples, 0.75%)</title><rect x="58.8673%" y="261" width="0.7513%" height="15" fill="rgb(241,28,37)"/><text x="59.1173%" y="271.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (31 samples, 0.22%)</title><rect x="59.3989%" y="245" width="0.2197%" height="15" fill="rgb(233,93,10)"/><text x="59.6489%" y="255.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (31 samples, 0.22%)</title><rect x="59.3989%" y="229" width="0.2197%" height="15" fill="rgb(225,113,19)"/><text x="59.6489%" y="239.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (31 samples, 0.22%)</title><rect x="59.3989%" y="213" width="0.2197%" height="15" fill="rgb(241,2,18)"/><text x="59.6489%" y="223.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (576 samples, 4.08%)</title><rect x="55.6138%" y="277" width="4.0828%" height="15" fill="rgb(228,207,21)"/><text x="55.8638%" y="287.50">_Z27..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::is_resumable (42 samples, 0.30%)</title><rect x="59.7179%" y="277" width="0.2977%" height="15" fill="rgb(213,211,35)"/><text x="59.9679%" y="287.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (16 samples, 0.11%)</title><rect x="60.6110%" y="213" width="0.1134%" height="15" fill="rgb(209,83,10)"/><text x="60.8610%" y="223.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (16 samples, 0.11%)</title><rect x="60.6110%" y="197" width="0.1134%" height="15" fill="rgb(209,164,1)"/><text x="60.8610%" y="207.50"></text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (69 samples, 0.49%)</title><rect x="60.3984%" y="229" width="0.4891%" height="15" fill="rgb(213,184,43)"/><text x="60.6484%" y="239.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (15 samples, 0.11%)</title><rect x="60.7811%" y="213" width="0.1063%" height="15" fill="rgb(231,61,34)"/><text x="61.0311%" y="223.50"></text></g><g><title>__strlen_avx2 (18 samples, 0.13%)</title><rect x="61.4261%" y="117" width="0.1276%" height="15" fill="rgb(235,75,3)"/><text x="61.6761%" y="127.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (96 samples, 0.68%)</title><rect x="60.8874%" y="197" width="0.6805%" height="15" fill="rgb(220,106,47)"/><text x="61.1374%" y="207.50"></text></g><g><title>is_special (40 samples, 0.28%)</title><rect x="61.2844%" y="181" width="0.2835%" height="15" fill="rgb(210,196,33)"/><text x="61.5344%" y="191.50"></text></g><g><title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (31 samples, 0.22%)</title><rect x="61.3482%" y="165" width="0.2197%" height="15" fill="rgb(229,154,42)"/><text x="61.5982%" y="175.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (31 samples, 0.22%)</title><rect x="61.3482%" y="149" width="0.2197%" height="15" fill="rgb(228,114,26)"/><text x="61.5982%" y="159.50"></text></g><g><title>std::char_traits&lt;char&gt;::length (22 samples, 0.16%)</title><rect x="61.4120%" y="133" width="0.1559%" height="15" fill="rgb(208,144,1)"/><text x="61.6620%" y="143.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (104 samples, 0.74%)</title><rect x="60.8874%" y="213" width="0.7372%" height="15" fill="rgb(239,112,37)"/><text x="61.1374%" y="223.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (26 samples, 0.18%)</title><rect x="61.7593%" y="213" width="0.1843%" height="15" fill="rgb(210,96,50)"/><text x="62.0093%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (26 samples, 0.18%)</title><rect x="61.7593%" y="197" width="0.1843%" height="15" fill="rgb(222,178,2)"/><text x="62.0093%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (21 samples, 0.15%)</title><rect x="61.7947%" y="181" width="0.1489%" height="15" fill="rgb(226,74,18)"/><text x="62.0447%" y="191.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (21 samples, 0.15%)</title><rect x="61.7947%" y="165" width="0.1489%" height="15" fill="rgb(225,67,54)"/><text x="62.0447%" y="175.50"></text></g><g><title>directory_entries_with_paths (167 samples, 1.18%)</title><rect x="60.8874%" y="229" width="1.1837%" height="15" fill="rgb(251,92,32)"/><text x="61.1374%" y="239.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (243 samples, 1.72%)</title><rect x="60.3913%" y="245" width="1.7224%" height="15" fill="rgb(228,149,22)"/><text x="60.6413%" y="255.50"></text></g><g><title>generator&lt;dirent&gt;::begin (27 samples, 0.19%)</title><rect x="62.3193%" y="133" width="0.1914%" height="15" fill="rgb(243,54,13)"/><text x="62.5693%" y="143.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::iterator (27 samples, 0.19%)</title><rect x="62.3193%" y="117" width="0.1914%" height="15" fill="rgb(243,180,28)"/><text x="62.5693%" y="127.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (27 samples, 0.19%)</title><rect x="62.3193%" y="101" width="0.1914%" height="15" fill="rgb(208,167,24)"/><text x="62.5693%" y="111.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (27 samples, 0.19%)</title><rect x="62.3193%" y="85" width="0.1914%" height="15" fill="rgb(245,73,45)"/><text x="62.5693%" y="95.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::begin (49 samples, 0.35%)</title><rect x="62.2200%" y="197" width="0.3473%" height="15" fill="rgb(237,203,48)"/><text x="62.4700%" y="207.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::iterator (49 samples, 0.35%)</title><rect x="62.2200%" y="181" width="0.3473%" height="15" fill="rgb(211,197,16)"/><text x="62.4700%" y="191.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (49 samples, 0.35%)</title><rect x="62.2200%" y="165" width="0.3473%" height="15" fill="rgb(243,99,51)"/><text x="62.4700%" y="175.50"></text></g><g><title>directory_entries_with_paths (37 samples, 0.26%)</title><rect x="62.3051%" y="149" width="0.2623%" height="15" fill="rgb(215,123,29)"/><text x="62.5551%" y="159.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (63 samples, 0.45%)</title><rect x="62.1350%" y="229" width="0.4466%" height="15" fill="rgb(239,186,37)"/><text x="62.3850%" y="239.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (63 samples, 0.45%)</title><rect x="62.1350%" y="213" width="0.4466%" height="15" fill="rgb(252,136,39)"/><text x="62.3850%" y="223.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (82 samples, 0.58%)</title><rect x="62.1137%" y="245" width="0.5812%" height="15" fill="rgb(223,213,32)"/><text x="62.3637%" y="255.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (16 samples, 0.11%)</title><rect x="62.5815%" y="229" width="0.1134%" height="15" fill="rgb(233,115,5)"/><text x="62.8315%" y="239.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (16 samples, 0.11%)</title><rect x="62.5815%" y="213" width="0.1134%" height="15" fill="rgb(207,226,44)"/><text x="62.8315%" y="223.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (16 samples, 0.11%)</title><rect x="62.5815%" y="197" width="0.1134%" height="15" fill="rgb(208,126,0)"/><text x="62.8315%" y="207.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (383 samples, 2.71%)</title><rect x="60.0439%" y="261" width="2.7148%" height="15" fill="rgb(244,66,21)"/><text x="60.2939%" y="271.50">_Z..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::is_resumable (18 samples, 0.13%)</title><rect x="62.7587%" y="261" width="0.1276%" height="15" fill="rgb(222,97,12)"/><text x="63.0087%" y="271.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (31 samples, 0.22%)</title><rect x="63.3116%" y="197" width="0.2197%" height="15" fill="rgb(219,213,19)"/><text x="63.5616%" y="207.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (31 samples, 0.22%)</title><rect x="63.3116%" y="181" width="0.2197%" height="15" fill="rgb(252,169,30)"/><text x="63.5616%" y="191.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (18 samples, 0.13%)</title><rect x="63.5313%" y="197" width="0.1276%" height="15" fill="rgb(206,32,51)"/><text x="63.7813%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (18 samples, 0.13%)</title><rect x="63.5313%" y="181" width="0.1276%" height="15" fill="rgb(250,172,42)"/><text x="63.7813%" y="191.50"></text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (79 samples, 0.56%)</title><rect x="63.1557%" y="213" width="0.5600%" height="15" fill="rgb(209,34,43)"/><text x="63.4057%" y="223.50"></text></g><g><title>is_special (37 samples, 0.26%)</title><rect x="64.2260%" y="165" width="0.2623%" height="15" fill="rgb(223,11,35)"/><text x="64.4760%" y="175.50"></text></g><g><title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (24 samples, 0.17%)</title><rect x="64.3181%" y="149" width="0.1701%" height="15" fill="rgb(251,219,26)"/><text x="64.5681%" y="159.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (24 samples, 0.17%)</title><rect x="64.3181%" y="133" width="0.1701%" height="15" fill="rgb(231,119,3)"/><text x="64.5681%" y="143.50"></text></g><g><title>std::char_traits&lt;char&gt;::length (15 samples, 0.11%)</title><rect x="64.3819%" y="117" width="0.1063%" height="15" fill="rgb(216,97,11)"/><text x="64.6319%" y="127.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (110 samples, 0.78%)</title><rect x="63.7156%" y="181" width="0.7797%" height="15" fill="rgb(223,59,9)"/><text x="63.9656%" y="191.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (114 samples, 0.81%)</title><rect x="63.7156%" y="197" width="0.8081%" height="15" fill="rgb(233,93,31)"/><text x="63.9656%" y="207.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (19 samples, 0.13%)</title><rect x="64.7009%" y="197" width="0.1347%" height="15" fill="rgb(239,81,33)"/><text x="64.9509%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (19 samples, 0.13%)</title><rect x="64.7009%" y="181" width="0.1347%" height="15" fill="rgb(213,120,34)"/><text x="64.9509%" y="191.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (16 samples, 0.11%)</title><rect x="64.7221%" y="165" width="0.1134%" height="15" fill="rgb(243,49,53)"/><text x="64.9721%" y="175.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (16 samples, 0.11%)</title><rect x="64.7221%" y="149" width="0.1134%" height="15" fill="rgb(247,216,33)"/><text x="64.9721%" y="159.50"></text></g><g><title>directory_entries_with_paths (184 samples, 1.30%)</title><rect x="63.7156%" y="213" width="1.3042%" height="15" fill="rgb(226,26,14)"/><text x="63.9656%" y="223.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (15 samples, 0.11%)</title><rect x="64.9135%" y="197" width="0.1063%" height="15" fill="rgb(215,49,53)"/><text x="65.1635%" y="207.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (266 samples, 1.89%)</title><rect x="63.1557%" y="229" width="1.8855%" height="15" fill="rgb(245,162,40)"/><text x="63.4057%" y="239.50">g..</text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (34 samples, 0.24%)</title><rect x="65.2608%" y="69" width="0.2410%" height="15" fill="rgb(229,68,17)"/><text x="65.5108%" y="79.50"></text></g><g><title>generator&lt;dirent&gt;::begin (35 samples, 0.25%)</title><rect x="65.2608%" y="117" width="0.2481%" height="15" fill="rgb(213,182,10)"/><text x="65.5108%" y="127.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::iterator (35 samples, 0.25%)</title><rect x="65.2608%" y="101" width="0.2481%" height="15" fill="rgb(245,125,30)"/><text x="65.5108%" y="111.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (35 samples, 0.25%)</title><rect x="65.2608%" y="85" width="0.2481%" height="15" fill="rgb(232,202,2)"/><text x="65.5108%" y="95.50"></text></g><g><title>directory_entries_with_paths (54 samples, 0.38%)</title><rect x="65.2325%" y="133" width="0.3828%" height="15" fill="rgb(237,140,51)"/><text x="65.4825%" y="143.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::begin (67 samples, 0.47%)</title><rect x="65.1545%" y="181" width="0.4749%" height="15" fill="rgb(236,157,25)"/><text x="65.4045%" y="191.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::iterator (67 samples, 0.47%)</title><rect x="65.1545%" y="165" width="0.4749%" height="15" fill="rgb(219,209,0)"/><text x="65.4045%" y="175.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (67 samples, 0.47%)</title><rect x="65.1545%" y="149" width="0.4749%" height="15" fill="rgb(240,116,54)"/><text x="65.4045%" y="159.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (83 samples, 0.59%)</title><rect x="65.0482%" y="213" width="0.5883%" height="15" fill="rgb(216,10,36)"/><text x="65.2982%" y="223.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (83 samples, 0.59%)</title><rect x="65.0482%" y="197" width="0.5883%" height="15" fill="rgb(222,72,44)"/><text x="65.2982%" y="207.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (100 samples, 0.71%)</title><rect x="65.0411%" y="229" width="0.7088%" height="15" fill="rgb(232,159,9)"/><text x="65.2911%" y="239.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (16 samples, 0.11%)</title><rect x="65.6365%" y="213" width="0.1134%" height="15" fill="rgb(210,39,32)"/><text x="65.8865%" y="223.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (16 samples, 0.11%)</title><rect x="65.6365%" y="197" width="0.1134%" height="15" fill="rgb(216,194,45)"/><text x="65.8865%" y="207.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (16 samples, 0.11%)</title><rect x="65.6365%" y="181" width="0.1134%" height="15" fill="rgb(218,18,35)"/><text x="65.8865%" y="191.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (417 samples, 2.96%)</title><rect x="62.8934%" y="245" width="2.9558%" height="15" fill="rgb(207,83,51)"/><text x="63.1434%" y="255.50">_Z2..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::is_resumable (18 samples, 0.13%)</title><rect x="65.8563%" y="245" width="0.1276%" height="15" fill="rgb(225,63,43)"/><text x="66.1063%" y="255.50"></text></g><g><title>std::make_pair&lt;dirent const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (23 samples, 0.16%)</title><rect x="66.4871%" y="181" width="0.1630%" height="15" fill="rgb(207,57,36)"/><text x="66.7371%" y="191.50"></text></g><g><title>std::pair&lt;dirent, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (23 samples, 0.16%)</title><rect x="66.4871%" y="165" width="0.1630%" height="15" fill="rgb(216,99,33)"/><text x="66.7371%" y="175.50"></text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (65 samples, 0.46%)</title><rect x="66.3382%" y="197" width="0.4607%" height="15" fill="rgb(225,42,16)"/><text x="66.5882%" y="207.50"></text></g><g><title>generator&lt;dirent&gt;::promise_type::yield_value (15 samples, 0.11%)</title><rect x="67.2384%" y="149" width="0.1063%" height="15" fill="rgb(220,201,45)"/><text x="67.4884%" y="159.50"></text></g><g><title>std::optional&lt;dirent&gt;::operator=&lt;dirent&gt; (15 samples, 0.11%)</title><rect x="67.2384%" y="133" width="0.1063%" height="15" fill="rgb(225,33,4)"/><text x="67.4884%" y="143.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (17 samples, 0.12%)</title><rect x="67.3660%" y="133" width="0.1205%" height="15" fill="rgb(224,33,50)"/><text x="67.6160%" y="143.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (16 samples, 0.11%)</title><rect x="67.3731%" y="117" width="0.1134%" height="15" fill="rgb(246,198,51)"/><text x="67.6231%" y="127.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (16 samples, 0.11%)</title><rect x="67.3731%" y="101" width="0.1134%" height="15" fill="rgb(205,22,4)"/><text x="67.6231%" y="111.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (15 samples, 0.11%)</title><rect x="67.3802%" y="85" width="0.1063%" height="15" fill="rgb(206,3,8)"/><text x="67.6302%" y="95.50"></text></g><g><title>is_special (35 samples, 0.25%)</title><rect x="67.3448%" y="149" width="0.2481%" height="15" fill="rgb(251,23,15)"/><text x="67.5948%" y="159.50"></text></g><g><title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (15 samples, 0.11%)</title><rect x="67.4865%" y="133" width="0.1063%" height="15" fill="rgb(252,88,28)"/><text x="67.7365%" y="143.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (113 samples, 0.80%)</title><rect x="66.7990%" y="165" width="0.8010%" height="15" fill="rgb(212,127,14)"/><text x="67.0490%" y="175.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (114 samples, 0.81%)</title><rect x="66.7990%" y="181" width="0.8081%" height="15" fill="rgb(247,145,37)"/><text x="67.0490%" y="191.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (15 samples, 0.11%)</title><rect x="67.7771%" y="181" width="0.1063%" height="15" fill="rgb(209,117,53)"/><text x="68.0271%" y="191.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (15 samples, 0.11%)</title><rect x="67.7771%" y="165" width="0.1063%" height="15" fill="rgb(212,90,42)"/><text x="68.0271%" y="175.50"></text></g><g><title>directory_entries_with_paths (171 samples, 1.21%)</title><rect x="66.7990%" y="197" width="1.2121%" height="15" fill="rgb(218,164,37)"/><text x="67.0490%" y="207.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (240 samples, 1.70%)</title><rect x="66.3312%" y="213" width="1.7012%" height="15" fill="rgb(246,65,34)"/><text x="66.5812%" y="223.50"></text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (18 samples, 0.13%)</title><rect x="68.0678%" y="117" width="0.1276%" height="15" fill="rgb(231,100,33)"/><text x="68.3178%" y="127.50"></text></g><g><title>generator&lt;dirent&gt;::begin (34 samples, 0.24%)</title><rect x="68.1954%" y="101" width="0.2410%" height="15" fill="rgb(228,126,14)"/><text x="68.4454%" y="111.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::iterator (34 samples, 0.24%)</title><rect x="68.1954%" y="85" width="0.2410%" height="15" fill="rgb(215,173,21)"/><text x="68.4454%" y="95.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (34 samples, 0.24%)</title><rect x="68.1954%" y="69" width="0.2410%" height="15" fill="rgb(210,6,40)"/><text x="68.4454%" y="79.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (34 samples, 0.24%)</title><rect x="68.1954%" y="53" width="0.2410%" height="15" fill="rgb(212,48,18)"/><text x="68.4454%" y="63.50"></text></g><g><title>directory_entries_with_paths (44 samples, 0.31%)</title><rect x="68.1954%" y="117" width="0.3119%" height="15" fill="rgb(230,214,11)"/><text x="68.4454%" y="127.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::begin (63 samples, 0.45%)</title><rect x="68.0678%" y="165" width="0.4466%" height="15" fill="rgb(254,105,39)"/><text x="68.3178%" y="175.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::iterator (63 samples, 0.45%)</title><rect x="68.0678%" y="149" width="0.4466%" height="15" fill="rgb(245,158,5)"/><text x="68.3178%" y="159.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (63 samples, 0.45%)</title><rect x="68.0678%" y="133" width="0.4466%" height="15" fill="rgb(249,208,11)"/><text x="68.3178%" y="143.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (69 samples, 0.49%)</title><rect x="68.0465%" y="197" width="0.4891%" height="15" fill="rgb(210,39,28)"/><text x="68.2965%" y="207.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (69 samples, 0.49%)</title><rect x="68.0465%" y="181" width="0.4891%" height="15" fill="rgb(211,56,53)"/><text x="68.2965%" y="191.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (93 samples, 0.66%)</title><rect x="68.0394%" y="213" width="0.6592%" height="15" fill="rgb(226,201,30)"/><text x="68.2894%" y="223.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (23 samples, 0.16%)</title><rect x="68.5356%" y="197" width="0.1630%" height="15" fill="rgb(239,101,34)"/><text x="68.7856%" y="207.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (23 samples, 0.16%)</title><rect x="68.5356%" y="181" width="0.1630%" height="15" fill="rgb(226,209,5)"/><text x="68.7856%" y="191.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (23 samples, 0.16%)</title><rect x="68.5356%" y="165" width="0.1630%" height="15" fill="rgb(250,105,47)"/><text x="68.7856%" y="175.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (388 samples, 2.75%)</title><rect x="65.9838%" y="229" width="2.7502%" height="15" fill="rgb(230,72,3)"/><text x="66.2338%" y="239.50">_Z..</text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (35 samples, 0.25%)</title><rect x="69.0034%" y="181" width="0.2481%" height="15" fill="rgb(232,218,39)"/><text x="69.2534%" y="191.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (73 samples, 0.52%)</title><rect x="69.2515%" y="149" width="0.5174%" height="15" fill="rgb(248,166,6)"/><text x="69.5015%" y="159.50"></text></g><g><title>is_special (29 samples, 0.21%)</title><rect x="69.5634%" y="133" width="0.2056%" height="15" fill="rgb(247,89,20)"/><text x="69.8134%" y="143.50"></text></g><g><title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (16 samples, 0.11%)</title><rect x="69.6555%" y="117" width="0.1134%" height="15" fill="rgb(248,130,54)"/><text x="69.9055%" y="127.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (16 samples, 0.11%)</title><rect x="69.6555%" y="101" width="0.1134%" height="15" fill="rgb(234,196,4)"/><text x="69.9055%" y="111.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (77 samples, 0.55%)</title><rect x="69.2515%" y="165" width="0.5458%" height="15" fill="rgb(250,143,31)"/><text x="69.5015%" y="175.50"></text></g><g><title>directory_entries_with_paths (115 samples, 0.82%)</title><rect x="69.2515%" y="181" width="0.8151%" height="15" fill="rgb(211,110,34)"/><text x="69.5015%" y="191.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (155 samples, 1.10%)</title><rect x="69.0034%" y="197" width="1.0987%" height="15" fill="rgb(215,124,48)"/><text x="69.2534%" y="207.50"></text></g><g><title>generator&lt;dirent&gt;::begin (17 samples, 0.12%)</title><rect x="70.2438%" y="85" width="0.1205%" height="15" fill="rgb(216,46,13)"/><text x="70.4938%" y="95.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::iterator (17 samples, 0.12%)</title><rect x="70.2438%" y="69" width="0.1205%" height="15" fill="rgb(205,184,25)"/><text x="70.4938%" y="79.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (17 samples, 0.12%)</title><rect x="70.2438%" y="53" width="0.1205%" height="15" fill="rgb(228,1,10)"/><text x="70.4938%" y="63.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (17 samples, 0.12%)</title><rect x="70.2438%" y="37" width="0.1205%" height="15" fill="rgb(213,116,27)"/><text x="70.4938%" y="47.50"></text></g><g><title>directory_entries_with_paths (25 samples, 0.18%)</title><rect x="70.2367%" y="101" width="0.1772%" height="15" fill="rgb(241,95,50)"/><text x="70.4867%" y="111.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::begin (34 samples, 0.24%)</title><rect x="70.1800%" y="149" width="0.2410%" height="15" fill="rgb(238,48,32)"/><text x="70.4300%" y="159.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::iterator (34 samples, 0.24%)</title><rect x="70.1800%" y="133" width="0.2410%" height="15" fill="rgb(235,113,49)"/><text x="70.4300%" y="143.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (34 samples, 0.24%)</title><rect x="70.1800%" y="117" width="0.2410%" height="15" fill="rgb(205,127,43)"/><text x="70.4300%" y="127.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (46 samples, 0.33%)</title><rect x="70.1092%" y="181" width="0.3261%" height="15" fill="rgb(250,162,2)"/><text x="70.3592%" y="191.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (46 samples, 0.33%)</title><rect x="70.1092%" y="165" width="0.3261%" height="15" fill="rgb(220,13,41)"/><text x="70.3592%" y="175.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (58 samples, 0.41%)</title><rect x="70.1092%" y="197" width="0.4111%" height="15" fill="rgb(249,221,25)"/><text x="70.3592%" y="207.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (251 samples, 1.78%)</title><rect x="68.8120%" y="213" width="1.7791%" height="15" fill="rgb(215,208,19)"/><text x="69.0620%" y="223.50">_..</text></g><g><title>_Z28directory_entries_with_pathsSt17basic_string_viewIcSt11char_traitsIcEE.actor (22 samples, 0.16%)</title><rect x="70.7684%" y="165" width="0.1559%" height="15" fill="rgb(236,175,2)"/><text x="71.0184%" y="175.50"></text></g><g><title>generator&lt;dirent&gt;::iterator::operator++ (32 samples, 0.23%)</title><rect x="70.9243%" y="149" width="0.2268%" height="15" fill="rgb(241,52,2)"/><text x="71.1743%" y="159.50"></text></g><g><title>_Z17directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (32 samples, 0.23%)</title><rect x="70.9243%" y="133" width="0.2268%" height="15" fill="rgb(248,140,14)"/><text x="71.1743%" y="143.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (71 samples, 0.50%)</title><rect x="70.7613%" y="181" width="0.5033%" height="15" fill="rgb(253,22,42)"/><text x="71.0113%" y="191.50"></text></g><g><title>directory_entries_with_paths (48 samples, 0.34%)</title><rect x="70.9243%" y="165" width="0.3402%" height="15" fill="rgb(234,61,47)"/><text x="71.1743%" y="175.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type::yield_value (15 samples, 0.11%)</title><rect x="71.2645%" y="181" width="0.1063%" height="15" fill="rgb(208,226,15)"/><text x="71.5145%" y="191.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (107 samples, 0.76%)</title><rect x="70.6479%" y="197" width="0.7584%" height="15" fill="rgb(217,221,4)"/><text x="70.8979%" y="207.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (15 samples, 0.11%)</title><rect x="71.4063%" y="181" width="0.1063%" height="15" fill="rgb(212,174,34)"/><text x="71.6563%" y="191.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (15 samples, 0.11%)</title><rect x="71.7536%" y="101" width="0.1063%" height="15" fill="rgb(253,83,4)"/><text x="72.0036%" y="111.50"></text></g><g><title>_Z27recursive_directory_entriesSt17basic_string_viewIcSt11char_traitsIcEE.actor (19 samples, 0.13%)</title><rect x="71.7394%" y="117" width="0.1347%" height="15" fill="rgb(250,195,49)"/><text x="71.9894%" y="127.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (36 samples, 0.26%)</title><rect x="71.6402%" y="149" width="0.2552%" height="15" fill="rgb(241,192,25)"/><text x="71.8902%" y="159.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (22 samples, 0.16%)</title><rect x="71.7394%" y="133" width="0.1559%" height="15" fill="rgb(208,124,10)"/><text x="71.9894%" y="143.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (43 samples, 0.30%)</title><rect x="71.6119%" y="165" width="0.3048%" height="15" fill="rgb(222,33,0)"/><text x="71.8619%" y="175.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (59 samples, 0.42%)</title><rect x="71.5268%" y="181" width="0.4182%" height="15" fill="rgb(234,209,28)"/><text x="71.7768%" y="191.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (79 samples, 0.56%)</title><rect x="71.4063%" y="197" width="0.5600%" height="15" fill="rgb(224,11,23)"/><text x="71.6563%" y="207.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (196 samples, 1.39%)</title><rect x="70.6408%" y="213" width="1.3893%" height="15" fill="rgb(232,99,1)"/><text x="70.8908%" y="223.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (473 samples, 3.35%)</title><rect x="68.8120%" y="229" width="3.3527%" height="15" fill="rgb(237,95,45)"/><text x="69.0620%" y="239.50">gen..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (911 samples, 6.46%)</title><rect x="65.9838%" y="245" width="6.4573%" height="15" fill="rgb(208,109,11)"/><text x="66.2338%" y="255.50">generato..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (32 samples, 0.23%)</title><rect x="72.2143%" y="229" width="0.2268%" height="15" fill="rgb(216,190,48)"/><text x="72.4643%" y="239.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (32 samples, 0.23%)</title><rect x="72.2143%" y="213" width="0.2268%" height="15" fill="rgb(251,171,36)"/><text x="72.4643%" y="223.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (32 samples, 0.23%)</title><rect x="72.2143%" y="197" width="0.2268%" height="15" fill="rgb(230,62,22)"/><text x="72.4643%" y="207.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (1,413 samples, 10.02%)</title><rect x="62.8863%" y="261" width="10.0156%" height="15" fill="rgb(225,114,35)"/><text x="63.1363%" y="271.50">generator&lt;std:..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (63 samples, 0.45%)</title><rect x="72.4553%" y="245" width="0.4466%" height="15" fill="rgb(215,118,42)"/><text x="72.7053%" y="255.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (63 samples, 0.45%)</title><rect x="72.4553%" y="229" width="0.4466%" height="15" fill="rgb(243,119,21)"/><text x="72.7053%" y="239.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (63 samples, 0.45%)</title><rect x="72.4553%" y="213" width="0.4466%" height="15" fill="rgb(252,177,53)"/><text x="72.7053%" y="223.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (1,887 samples, 13.38%)</title><rect x="60.0156%" y="277" width="13.3754%" height="15" fill="rgb(237,209,29)"/><text x="60.2656%" y="287.50">generator&lt;std::pair&lt;..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (59 samples, 0.42%)</title><rect x="72.9728%" y="261" width="0.4182%" height="15" fill="rgb(212,65,23)"/><text x="73.2228%" y="271.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (59 samples, 0.42%)</title><rect x="72.9728%" y="245" width="0.4182%" height="15" fill="rgb(230,222,46)"/><text x="73.2228%" y="255.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (59 samples, 0.42%)</title><rect x="72.9728%" y="229" width="0.4182%" height="15" fill="rgb(215,135,32)"/><text x="73.2228%" y="239.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (2,640 samples, 18.71%)</title><rect x="55.5713%" y="293" width="18.7128%" height="15" fill="rgb(246,101,22)"/><text x="55.8213%" y="303.50">generator&lt;std::pair&lt;dirent, s..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (120 samples, 0.85%)</title><rect x="73.4335%" y="277" width="0.8506%" height="15" fill="rgb(206,107,13)"/><text x="73.6835%" y="287.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (118 samples, 0.84%)</title><rect x="73.4477%" y="261" width="0.8364%" height="15" fill="rgb(250,100,44)"/><text x="73.6977%" y="271.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (118 samples, 0.84%)</title><rect x="73.4477%" y="245" width="0.8364%" height="15" fill="rgb(231,147,38)"/><text x="73.6977%" y="255.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (3,739 samples, 26.50%)</title><rect x="48.7596%" y="309" width="26.5027%" height="15" fill="rgb(229,8,40)"/><text x="49.0096%" y="319.50">generator&lt;std::pair&lt;dirent, std::basic_str..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (117 samples, 0.83%)</title><rect x="74.4329%" y="293" width="0.8293%" height="15" fill="rgb(221,135,30)"/><text x="74.6829%" y="303.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (116 samples, 0.82%)</title><rect x="74.4400%" y="277" width="0.8222%" height="15" fill="rgb(249,193,18)"/><text x="74.6900%" y="287.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (116 samples, 0.82%)</title><rect x="74.4400%" y="261" width="0.8222%" height="15" fill="rgb(209,133,39)"/><text x="74.6900%" y="271.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (5,024 samples, 35.61%)</title><rect x="41.0405%" y="325" width="35.6110%" height="15" fill="rgb(232,100,14)"/><text x="41.2905%" y="335.50">generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, s..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (187 samples, 1.33%)</title><rect x="75.3261%" y="309" width="1.3255%" height="15" fill="rgb(224,185,1)"/><text x="75.5761%" y="319.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (185 samples, 1.31%)</title><rect x="75.3402%" y="293" width="1.3113%" height="15" fill="rgb(223,139,8)"/><text x="75.5902%" y="303.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (185 samples, 1.31%)</title><rect x="75.3402%" y="277" width="1.3113%" height="15" fill="rgb(232,213,38)"/><text x="75.5902%" y="287.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (6,320 samples, 44.80%)</title><rect x="33.5838%" y="341" width="44.7973%" height="15" fill="rgb(207,94,22)"/><text x="33.8338%" y="351.50">generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (224 samples, 1.59%)</title><rect x="76.7933%" y="325" width="1.5878%" height="15" fill="rgb(219,183,54)"/><text x="77.0433%" y="335.50"></text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (220 samples, 1.56%)</title><rect x="76.8217%" y="309" width="1.5594%" height="15" fill="rgb(216,185,54)"/><text x="77.0717%" y="319.50"></text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (220 samples, 1.56%)</title><rect x="76.8217%" y="293" width="1.5594%" height="15" fill="rgb(254,217,39)"/><text x="77.0717%" y="303.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (7,481 samples, 53.03%)</title><rect x="27.4596%" y="357" width="53.0267%" height="15" fill="rgb(240,178,23)"/><text x="27.7096%" y="367.50">generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (281 samples, 1.99%)</title><rect x="78.4945%" y="341" width="1.9918%" height="15" fill="rgb(218,11,47)"/><text x="78.7445%" y="351.50">s..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (279 samples, 1.98%)</title><rect x="78.5086%" y="325" width="1.9776%" height="15" fill="rgb(218,51,51)"/><text x="78.7586%" y="335.50">s..</text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (279 samples, 1.98%)</title><rect x="78.5086%" y="309" width="1.9776%" height="15" fill="rgb(238,126,27)"/><text x="78.7586%" y="319.50">s..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (8,674 samples, 61.48%)</title><rect x="20.9881%" y="373" width="61.4828%" height="15" fill="rgb(249,202,22)"/><text x="21.2381%" y="383.50">generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (263 samples, 1.86%)</title><rect x="80.6067%" y="357" width="1.8642%" height="15" fill="rgb(254,195,49)"/><text x="80.8567%" y="367.50">s..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (256 samples, 1.81%)</title><rect x="80.6564%" y="341" width="1.8146%" height="15" fill="rgb(208,123,14)"/><text x="80.9064%" y="351.50">s..</text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (256 samples, 1.81%)</title><rect x="80.6564%" y="325" width="1.8146%" height="15" fill="rgb(224,200,8)"/><text x="80.9064%" y="335.50">s..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (9,800 samples, 69.46%)</title><rect x="15.3601%" y="389" width="69.4641%" height="15" fill="rgb(217,61,36)"/><text x="15.6101%" y="399.50">generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (321 samples, 2.28%)</title><rect x="82.5489%" y="373" width="2.2753%" height="15" fill="rgb(206,35,45)"/><text x="82.7989%" y="383.50">s..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (318 samples, 2.25%)</title><rect x="82.5702%" y="357" width="2.2540%" height="15" fill="rgb(217,65,33)"/><text x="82.8202%" y="367.50">s..</text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (318 samples, 2.25%)</title><rect x="82.5702%" y="341" width="2.2540%" height="15" fill="rgb(222,158,48)"/><text x="82.8202%" y="351.50">s..</text></g><g><title>std::__n4861::coroutine_handle&lt;generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type&gt;::promise (17 samples, 0.12%)</title><rect x="84.8242%" y="389" width="0.1205%" height="15" fill="rgb(254,2,54)"/><text x="85.0742%" y="399.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (10,723 samples, 76.01%)</title><rect x="11.1284%" y="405" width="76.0065%" height="15" fill="rgb(250,143,38)"/><text x="11.3784%" y="415.50">generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (309 samples, 2.19%)</title><rect x="84.9447%" y="389" width="2.1902%" height="15" fill="rgb(248,25,0)"/><text x="85.1947%" y="399.50">s..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (301 samples, 2.13%)</title><rect x="85.0014%" y="373" width="2.1335%" height="15" fill="rgb(206,152,27)"/><text x="85.2514%" y="383.50">s..</text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (301 samples, 2.13%)</title><rect x="85.0014%" y="357" width="2.1335%" height="15" fill="rgb(240,77,30)"/><text x="85.2514%" y="367.50">s..</text></g><g><title>std::__n4861::coroutine_handle&lt;generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::promise_type&gt;::promise (37 samples, 0.26%)</title><rect x="87.1350%" y="405" width="0.2623%" height="15" fill="rgb(231,5,3)"/><text x="87.3850%" y="415.50"></text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (11,257 samples, 79.79%)</title><rect x="9.9305%" y="421" width="79.7916%" height="15" fill="rgb(207,226,32)"/><text x="10.1805%" y="431.50">generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (328 samples, 2.32%)</title><rect x="87.3972%" y="405" width="2.3249%" height="15" fill="rgb(222,207,47)"/><text x="87.6472%" y="415.50">s..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (323 samples, 2.29%)</title><rect x="87.4327%" y="389" width="2.2895%" height="15" fill="rgb(229,115,45)"/><text x="87.6827%" y="399.50">s..</text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (323 samples, 2.29%)</title><rect x="87.4327%" y="373" width="2.2895%" height="15" fill="rgb(224,191,6)"/><text x="87.6827%" y="383.50">s..</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++ (11,740 samples, 83.22%)</title><rect x="8.9098%" y="453" width="83.2152%" height="15" fill="rgb(230,227,24)"/><text x="9.1598%" y="463.50">generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::iterator::operator++</text></g><g><title>generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume (11,694 samples, 82.89%)</title><rect x="9.2359%" y="437" width="82.8891%" height="15" fill="rgb(228,80,19)"/><text x="9.4859%" y="447.50">generator&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::resume</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (333 samples, 2.36%)</title><rect x="89.7647%" y="421" width="2.3604%" height="15" fill="rgb(247,229,0)"/><text x="90.0147%" y="431.50">st..</text></g><g><title>std::optional&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator=&lt;std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (325 samples, 2.30%)</title><rect x="89.8214%" y="405" width="2.3037%" height="15" fill="rgb(237,194,15)"/><text x="90.0714%" y="415.50">s..</text></g><g><title>std::pair&lt;dirent, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator= (325 samples, 2.30%)</title><rect x="89.8214%" y="389" width="2.3037%" height="15" fill="rgb(219,203,20)"/><text x="90.0714%" y="399.50">s..</text></g><g><title>std::__ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (26 samples, 0.18%)</title><rect x="92.4511%" y="405" width="0.1843%" height="15" fill="rgb(234,128,8)"/><text x="92.7011%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (62 samples, 0.44%)</title><rect x="94.6839%" y="357" width="0.4395%" height="15" fill="rgb(248,202,8)"/><text x="94.9339%" y="367.50"></text></g><g><title>__GI__IO_fwrite (322 samples, 2.28%)</title><rect x="92.9189%" y="389" width="2.2824%" height="15" fill="rgb(206,104,37)"/><text x="93.1689%" y="399.50">_..</text></g><g><title>_IO_new_file_xsputn (152 samples, 1.08%)</title><rect x="94.1239%" y="373" width="1.0774%" height="15" fill="rgb(223,8,27)"/><text x="94.3739%" y="383.50"></text></g><g><title>std::__ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (394 samples, 2.79%)</title><rect x="92.4369%" y="421" width="2.7927%" height="15" fill="rgb(216,217,28)"/><text x="92.6869%" y="431.50">st..</text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::sputn (366 samples, 2.59%)</title><rect x="92.6354%" y="405" width="2.5943%" height="15" fill="rgb(249,199,1)"/><text x="92.8854%" y="415.50">st..</text></g><g><title>std::ios_base::width (66 samples, 0.47%)</title><rect x="95.2297%" y="421" width="0.4678%" height="15" fill="rgb(240,85,17)"/><text x="95.4797%" y="431.50"></text></g><g><title>std::ostream::sentry::sentry (74 samples, 0.52%)</title><rect x="95.6975%" y="421" width="0.5245%" height="15" fill="rgb(206,108,45)"/><text x="95.9475%" y="431.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::tie (22 samples, 0.16%)</title><rect x="96.0661%" y="405" width="0.1559%" height="15" fill="rgb(245,210,41)"/><text x="96.3161%" y="415.50"></text></g><g><title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (602 samples, 4.27%)</title><rect x="92.1888%" y="437" width="4.2671%" height="15" fill="rgb(206,13,37)"/><text x="92.4388%" y="447.50">std::..</text></g><g><title>std::ostream::sentry::~sentry (33 samples, 0.23%)</title><rect x="96.2220%" y="421" width="0.2339%" height="15" fill="rgb(250,61,18)"/><text x="96.4720%" y="431.50"></text></g><g><title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (617 samples, 4.37%)</title><rect x="92.1250%" y="453" width="4.3734%" height="15" fill="rgb(235,172,48)"/><text x="92.3750%" y="463.50">std::..</text></g><g><title>std::__ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (28 samples, 0.20%)</title><rect x="96.9096%" y="405" width="0.1985%" height="15" fill="rgb(249,201,17)"/><text x="97.1596%" y="415.50"></text></g><g><title>__GI__IO_fwrite (219 samples, 1.55%)</title><rect x="97.1506%" y="389" width="1.5523%" height="15" fill="rgb(219,208,6)"/><text x="97.4006%" y="399.50"></text></g><g><title>_IO_new_file_xsputn (78 samples, 0.55%)</title><rect x="98.1500%" y="373" width="0.5529%" height="15" fill="rgb(248,31,23)"/><text x="98.4000%" y="383.50"></text></g><g><title>std::__ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (260 samples, 1.84%)</title><rect x="96.9096%" y="421" width="1.8429%" height="15" fill="rgb(245,15,42)"/><text x="97.1596%" y="431.50">s..</text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::sputn (232 samples, 1.64%)</title><rect x="97.1080%" y="405" width="1.6445%" height="15" fill="rgb(222,217,39)"/><text x="97.3580%" y="415.50"></text></g><g><title>std::ios_base::width (32 samples, 0.23%)</title><rect x="98.7525%" y="421" width="0.2268%" height="15" fill="rgb(210,219,27)"/><text x="99.0025%" y="431.50"></text></g><g><title>std::ostream::sentry::sentry (27 samples, 0.19%)</title><rect x="98.9793%" y="421" width="0.1914%" height="15" fill="rgb(252,166,36)"/><text x="99.2293%" y="431.50"></text></g><g><title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (396 samples, 2.81%)</title><rect x="96.5551%" y="437" width="2.8069%" height="15" fill="rgb(245,132,34)"/><text x="96.8051%" y="447.50">st..</text></g><g><title>std::ostream::sentry::~sentry (27 samples, 0.19%)</title><rect x="99.1707%" y="421" width="0.1914%" height="15" fill="rgb(236,54,3)"/><text x="99.4207%" y="431.50"></text></g><g><title>__libc_start_main (12,769 samples, 90.51%)</title><rect x="8.8815%" y="485" width="90.5089%" height="15" fill="rgb(241,173,43)"/><text x="9.1315%" y="495.50">__libc_start_main</text></g><g><title>main (12,768 samples, 90.50%)</title><rect x="8.8886%" y="469" width="90.5018%" height="15" fill="rgb(215,190,9)"/><text x="9.1386%" y="479.50">main</text></g><g><title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (408 samples, 2.89%)</title><rect x="96.4984%" y="453" width="2.8920%" height="15" fill="rgb(242,101,16)"/><text x="96.7484%" y="463.50">st..</text></g><g><title>_start (12,791 samples, 90.66%)</title><rect x="8.8319%" y="501" width="90.6649%" height="15" fill="rgb(223,190,21)"/><text x="9.0819%" y="511.50">_start</text></g><g><title>_dl_start (15 samples, 0.11%)</title><rect x="99.3904%" y="485" width="0.1063%" height="15" fill="rgb(215,228,25)"/><text x="99.6404%" y="495.50"></text></g><g><title>std::char_traits&lt;char&gt;::compare (22 samples, 0.16%)</title><rect x="99.7661%" y="485" width="0.1559%" height="15" fill="rgb(225,36,22)"/><text x="100.0161%" y="495.50"></text></g><g><title>all (14,108 samples, 100%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(251,106,46)"/><text x="0.2500%" y="543.50"></text></g><g><title>readdir_gcc (14,108 samples, 100.00%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(208,90,1)"/><text x="0.2500%" y="527.50">readdir_gcc</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (71 samples, 0.50%)</title><rect x="99.4967%" y="501" width="0.5033%" height="15" fill="rgb(243,10,4)"/><text x="99.7467%" y="511.50"></text></g></svg></svg>